"use strict";

var _jsxRuntime = require("react/jsx-runtime");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
var React = window.React;
var ReactDOM = window.ReactDOM;
var marked = window.marked;
var useState = React.useState,
  useEffect = React.useEffect,
  useCallback = React.useCallback,
  useRef = React.useRef;

/** Utility Functions **/

// Sanitize number input
function sanitizeNumber(value) {
  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var num = Number(value);
  return !isNaN(num) && isFinite(num) ? num : fallback;
}

// Determine model rarity
var getModelRarity = function getModelRarity(modelName) {
  var modelRarities = {
    'meta-llama/llama-3.2-1b-instruct': 'common',
    'meta-llama/llama-3.2-3b-instruct': 'common',
    'eva-unit-01/eva-qwen-2.5-72b': 'rare',
    'openai/gpt-4o': 'legendary',
    'meta-llama/llama-3.1-405b-instruct': 'legendary',
    'anthropic/claude-3-opus:beta': 'legendary',
    'anthropic/claude-3.5-sonnet:beta': 'legendary',
    'anthropic/claude-3.5-haiku:beta': 'uncommon',
    'neversleep/llama-3.1-lumimaid-70b': 'rare',
    'nvidia/llama-3.1-nemotron-70b-instruct': 'rare',
    'meta-llama/llama-3.1-70b-instruct': 'uncommon',
    'pygmalionai/mythalion-13b': 'uncommon',
    'mistralai/mistral-large-2411': 'uncommon',
    'qwen/qwq-32b-preview': 'uncommon',
    'gryphe/mythomax-l2-13b': 'common',
    'google/gemini-flash-1.5-8b': 'common',
    'x-ai/grok-beta': 'legendary'
  };
  return modelRarities[modelName] || 'common';
};

// Map rarity to tier
var rarityToTier = {
  legendary: 'S',
  rare: 'A',
  uncommon: 'B',
  common: 'C'
};

// Get tier from model
var getTierFromModel = function getTierFromModel(model) {
  if (!model) return 'U';
  var rarity = getModelRarity(model);
  return rarityToTier[rarity] || 'U';
};

/** Helper Components **/

// Safe Markdown Renderer
var MarkdownContent = function MarkdownContent(_ref) {
  var content = _ref.content;
  var sanitizedContent = marked(content || '').replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '');
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "prose prose-invert max-w-none",
    dangerouslySetInnerHTML: {
      __html: sanitizedContent
    }
  });
};

// Tier Badge Component
var TierBadge = React.memo(function (_ref2) {
  var tier = _ref2.tier;
  var colors = {
    S: 'bg-purple-600',
    // Legendary
    A: 'bg-blue-600',
    // Rare
    B: 'bg-green-600',
    // Uncommon
    C: 'bg-yellow-600',
    // Common
    U: 'bg-gray-600' // Unknown
  };
  var tierLabels = {
    S: 'Legendary',
    A: 'Rare',
    B: 'Uncommon',
    C: 'Common',
    U: 'Unknown'
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
    className: "".concat(colors[tier], " px-2 py-1 rounded text-xs font-bold"),
    title: tierLabels[tier],
    children: ["Tier ", tier]
  });
});

// Progress Ring Component
var ProgressRing = function ProgressRing(_ref3) {
  var value = _ref3.value,
    maxValue = _ref3.maxValue,
    _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? 120 : _ref3$size,
    _ref3$strokeWidth = _ref3.strokeWidth,
    strokeWidth = _ref3$strokeWidth === void 0 ? 8 : _ref3$strokeWidth,
    _ref3$color = _ref3.color,
    color = _ref3$color === void 0 ? '#60A5FA' : _ref3$color,
    centerContent = _ref3.centerContent;
  var radius = (size - strokeWidth) / 2;
  var circumference = radius * 2 * Math.PI;
  var progress = value / maxValue;
  var strokeDashoffset = circumference * (1 - progress);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "relative inline-flex items-center justify-center",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("svg", {
      width: size,
      height: size,
      className: "transform -rotate-90",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
        cx: size / 2,
        cy: size / 2,
        r: radius,
        stroke: "#374151",
        strokeWidth: strokeWidth,
        fill: "transparent"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("circle", {
        cx: size / 2,
        cy: size / 2,
        r: radius,
        stroke: color,
        strokeWidth: strokeWidth,
        strokeDasharray: circumference,
        strokeDashoffset: strokeDashoffset,
        fill: "transparent",
        className: "transition-all duration-500 ease-out"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "absolute text-center",
      children: centerContent
    })]
  });
};

// Tier Filter Component
var TierFilter = React.memo(function (_ref4) {
  var selectedTier = _ref4.selectedTier,
    onTierChange = _ref4.onTierChange;
  var tiers = ['All', 'S', 'A', 'B', 'C', 'U'];
  var colors = {
    S: 'bg-purple-600',
    A: 'bg-blue-600',
    B: 'bg-green-600',
    C: 'bg-yellow-600',
    U: 'bg-gray-600'
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "flex gap-2 justify-center mb-6",
    children: tiers.map(function (tier) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
        className: "px-3 py-1 rounded ".concat(selectedTier === tier ? tier === 'All' ? 'bg-white text-gray-900' : "".concat(colors[tier], " text-white") : 'bg-gray-700 text-gray-300'),
        onClick: function onClick() {
          return onTierChange(tier);
        },
        children: tier
      }, tier);
    })
  });
});

/** Main Components **/

// Activity Feed Component
var ActivityFeed = function ActivityFeed(_ref5) {
  var messages = _ref5.messages,
    memories = _ref5.memories,
    narratives = _ref5.narratives,
    dungeonActions = _ref5.dungeonActions;
  var formatDate = function formatDate(date) {
    return new Date(date).toLocaleString();
  };

  // Safely extract arrays from potentially nested response objects
  var messagesList = Array.isArray(messages) ? messages : (messages === null || messages === void 0 ? void 0 : messages.messages) || [];
  var memoriesList = Array.isArray(memories) ? memories : (memories === null || memories === void 0 ? void 0 : memories.memories) || [];
  var narrativesList = Array.isArray(narratives) ? narratives : (narratives === null || narratives === void 0 ? void 0 : narratives.narratives) || [];
  var actionsList = Array.isArray(dungeonActions) ? dungeonActions : (dungeonActions === null || dungeonActions === void 0 ? void 0 : dungeonActions.actions) || [];

  // Combine and sort all activities
  var activities = React.useMemo(function () {
    return [].concat(_toConsumableArray(messagesList.map(function (m) {
      return {
        type: 'message',
        content: m.content,
        timestamp: new Date(m.timestamp),
        icon: '💭'
      };
    })), _toConsumableArray(memoriesList.map(function (m) {
      return {
        type: 'memory',
        content: m.memory,
        timestamp: new Date(m.timestamp),
        icon: '🧠'
      };
    })), _toConsumableArray(narrativesList.map(function (n) {
      return {
        type: 'narrative',
        content: n.content,
        timestamp: new Date(n.timestamp),
        icon: '📖'
      };
    })), _toConsumableArray(actionsList.map(function (d) {
      return {
        type: 'dungeon',
        content: "**".concat(d.result, "** ").concat(d.targetName ? "against ".concat(d.targetName) : ''),
        timestamp: new Date(d.timestamp),
        icon: '⚔️'
      };
    }))).sort(function (a, b) {
      return b.timestamp - a.timestamp;
    });
  }, [messagesList, memoriesList, narrativesList, actionsList]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "space-y-4",
    children: [activities.map(function (activity, i) {
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "bg-gray-700 rounded-lg p-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center gap-2 mb-2",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-sm text-gray-400",
            children: activity.icon
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-xs text-gray-500",
            children: formatDate(activity.timestamp)
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-xs text-gray-400 ml-auto",
            children: activity.type
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(MarkdownContent, {
          content: activity.content
        })]
      }, i);
    }), activities.length === 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-gray-500 text-center",
      children: "No recent activity"
    })]
  });
};

// Ancestry Chain Component
var AncestryChain = React.memo(function (_ref6) {
  var ancestry = _ref6.ancestry;
  if (!(ancestry !== null && ancestry !== void 0 && ancestry.length)) return null;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "bg-gray-700 rounded-lg p-4 mb-4",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
      className: "text-xl font-bold mb-3",
      children: "Ancestry"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "flex items-center gap-2 overflow-x-auto pb-2",
      children: ancestry.slice().reverse().map(function (ancestor, index, array) {
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "flex items-center gap-2 flex-shrink-0",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
              src: ancestor.imageUrl,
              alt: ancestor.name,
              className: "w-8 h-8 rounded-full object-cover"
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "text-sm",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "font-medium",
                children: ancestor.name
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "text-gray-400 text-xs",
                children: ancestor.emoji
              })]
            })]
          }), index < array.length - 1 && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-gray-500 mx-2",
            children: "\u2192"
          })]
        }, ancestor._id);
      })
    })]
  });
});

// Stats Display Component
var StatsDisplay = React.memo(function (_ref7) {
  var stats = _ref7.stats,
    _ref7$size = _ref7.size,
    size = _ref7$size === void 0 ? 'small' : _ref7$size;
  var _ref8 = stats || {},
    _ref8$hp = _ref8.hp,
    hp = _ref8$hp === void 0 ? 0 : _ref8$hp,
    _ref8$attack = _ref8.attack,
    attack = _ref8$attack === void 0 ? 0 : _ref8$attack,
    _ref8$defense = _ref8.defense,
    defense = _ref8$defense === void 0 ? 0 : _ref8$defense;
  if (size === 'small') {
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex gap-2 text-xs text-gray-400",
      children: [hp > 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
        title: "HP",
        children: ["\u2764\uFE0F ", hp]
      }), attack > 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
        title: "Attack",
        children: ["\u2694\uFE0F ", attack]
      }), defense > 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
        title: "Defense",
        children: ["\uD83D\uDEE1\uFE0F ", defense]
      })]
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "space-y-4",
    children: [hp > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "flex justify-center",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(ProgressRing, {
        value: hp,
        maxValue: 100,
        size: 80,
        centerContent: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "text-lg font-bold",
          children: ["\u2764\uFE0F ", hp]
        })
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "grid grid-cols-2 gap-2 text-center",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "bg-gray-800 rounded p-2",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "text-sm text-gray-400",
          children: "Attack"
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "text-xl",
          children: ["\u2694\uFE0F ", attack]
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "bg-gray-800 rounded p-2",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "text-sm text-gray-400",
          children: "Defense"
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "text-xl",
          children: ["\uD83D\uDEE1\uFE0F ", defense]
        })]
      })]
    })]
  });
});

// XAuth Button Component
var XAuthButton = function XAuthButton(_ref9) {
  var avatarId = _ref9.avatarId,
    walletAddress = _ref9.walletAddress,
    onAuthChange = _ref9.onAuthChange;
  var _useState = useState(null),
    _useState2 = _slicedToArray(_useState, 2),
    authStatus = _useState2[0],
    setAuthStatus = _useState2[1];
  var _useState3 = useState(true),
    _useState4 = _slicedToArray(_useState3, 2),
    loading = _useState4[0],
    setLoading = _useState4[1];
  var _useState5 = useState(null),
    _useState6 = _slicedToArray(_useState5, 2),
    error = _useState6[0],
    setError = _useState6[1];
  var checkAuthStatus = useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var response, data;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (avatarId) {
            _context.next = 2;
            break;
          }
          return _context.abrupt("return");
        case 2:
          _context.prev = 2;
          setError(null);
          _context.next = 6;
          return fetch("/api/xauth/status/".concat(avatarId));
        case 6:
          response = _context.sent;
          _context.next = 9;
          return response.json();
        case 9:
          data = _context.sent;
          setAuthStatus(data);
          onAuthChange === null || onAuthChange === void 0 || onAuthChange(data.authorized);

          // If token is invalid/revoked, clear the status
          if (data.requiresReauth) {
            setAuthStatus(null);
          }
          _context.next = 20;
          break;
        case 15:
          _context.prev = 15;
          _context.t0 = _context["catch"](2);
          console.error('Error checking auth status:', _context.t0);
          setError('Failed to check connection status');
          setAuthStatus(null);
        case 20:
          _context.prev = 20;
          setLoading(false);
          return _context.finish(20);
        case 23:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[2, 15, 20, 23]]);
  })), [avatarId, onAuthChange]);

  // Poll status every minute to detect revoked access
  useEffect(function () {
    if (avatarId) {
      checkAuthStatus();
      var interval = setInterval(checkAuthStatus, 60000);
      return function () {
        return clearInterval(interval);
      };
    }
  }, [avatarId, checkAuthStatus]);
  var handleAuth = /*#__PURE__*/function () {
    var _ref11 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      var response, _yield$response$json, url, authError, popup, handleMessage, checkClosed;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            setError(null);
            setLoading(true);
            _context3.next = 5;
            return fetch("/api/xauth/auth-url?walletAddress=".concat(walletAddress, "&avatarId=").concat(avatarId));
          case 5:
            response = _context3.sent;
            _context3.next = 8;
            return response.json();
          case 8:
            _yield$response$json = _context3.sent;
            url = _yield$response$json.url;
            authError = _yield$response$json.error;
            if (!authError) {
              _context3.next = 13;
              break;
            }
            throw new Error(authError);
          case 13:
            popup = window.open(url, 'x-auth', 'width=600,height=800,left=100,top=100');
            handleMessage = /*#__PURE__*/function () {
              var _ref12 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {
                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      if (!(event.data.type === 'X_AUTH_SUCCESS')) {
                        _context2.next = 6;
                        break;
                      }
                      _context2.next = 3;
                      return checkAuthStatus();
                    case 3:
                      popup === null || popup === void 0 || popup.close();
                      _context2.next = 7;
                      break;
                    case 6:
                      if (event.data.type === 'X_AUTH_ERROR') {
                        setError(event.data.error || 'Authentication failed');
                        popup === null || popup === void 0 || popup.close();
                      }
                    case 7:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2);
              }));
              return function handleMessage(_x) {
                return _ref12.apply(this, arguments);
              };
            }();
            window.addEventListener('message', handleMessage);
            checkClosed = setInterval(function () {
              if (popup !== null && popup !== void 0 && popup.closed) {
                clearInterval(checkClosed);
                window.removeEventListener('message', handleMessage);
                setLoading(false);
              }
            }, 1000);
            _context3.next = 24;
            break;
          case 19:
            _context3.prev = 19;
            _context3.t0 = _context3["catch"](0);
            console.error('Error starting auth:', _context3.t0);
            setError(_context3.t0.message || 'Failed to start authentication');
            setLoading(false);
          case 24:
          case "end":
            return _context3.stop();
        }
      }, _callee3, null, [[0, 19]]);
    }));
    return function handleAuth() {
      return _ref11.apply(this, arguments);
    };
  }();
  var handleDisconnect = /*#__PURE__*/function () {
    var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            _context4.prev = 0;
            setLoading(true);
            _context4.next = 4;
            return fetch("/api/xauth/disconnect/".concat(avatarId), {
              method: 'POST'
            });
          case 4:
            setAuthStatus(null);
            onAuthChange === null || onAuthChange === void 0 || onAuthChange(false);
            _context4.next = 12;
            break;
          case 8:
            _context4.prev = 8;
            _context4.t0 = _context4["catch"](0);
            console.error('Error disconnecting:', _context4.t0);
            setError('Failed to disconnect');
          case 12:
            _context4.prev = 12;
            setLoading(false);
            return _context4.finish(12);
          case 15:
          case "end":
            return _context4.stop();
        }
      }, _callee4, null, [[0, 8, 12, 15]]);
    }));
    return function handleDisconnect() {
      return _ref13.apply(this, arguments);
    };
  }();
  if (loading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
      className: "bg-gray-600 px-4 py-2 rounded opacity-50 cursor-not-allowed flex items-center gap-2",
      disabled: true,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "animate-spin h-4 w-4 border-2 border-white rounded-full border-t-transparent"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        children: "Checking status..."
      })]
    });
  }
  if (error) {
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex flex-col gap-2",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
        onClick: checkAuthStatus,
        className: "bg-red-600 hover:bg-red-700 px-4 py-2 rounded flex items-center gap-2",
        children: "\u26A0\uFE0F Retry connection"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
        className: "text-red-500 text-sm",
        children: error
      })]
    });
  }
  if (authStatus !== null && authStatus !== void 0 && authStatus.authorized) {
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex flex-col gap-2",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          className: "bg-blue-600 px-4 py-2 rounded flex items-center gap-2",
          title: "Connected until ".concat(new Date(authStatus.expiresAt).toLocaleString()),
          children: "\uD835\uDD4F Connected"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: handleDisconnect,
          className: "bg-gray-600 hover:bg-gray-700 px-3 py-2 rounded text-sm",
          children: "Disconnect"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
        className: "text-xs text-gray-400",
        children: ["Expires: ", new Date(authStatus.expiresAt).toLocaleString()]
      })]
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
    onClick: handleAuth,
    className: "bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded flex items-center gap-2",
    children: "\uD835\uDD4F Connect X Account"
  });
};

// Avatar Detail Modal Component
var AvatarDetailModal = function AvatarDetailModal(_ref14) {
  var avatar = _ref14.avatar,
    onClose = _ref14.onClose,
    wallet = _ref14.wallet;
  var _useState7 = useState(0),
    _useState8 = _slicedToArray(_useState7, 2),
    currentVariantIndex = _useState8[0],
    setCurrentVariantIndex = _useState8[1];
  var _useState9 = useState({
      messages: [],
      memories: [],
      narratives: [],
      dungeonStats: (avatar === null || avatar === void 0 ? void 0 : avatar.stats) || {
        attack: 0,
        defense: 0,
        hp: 0
      },
      dungeonActions: []
    }),
    _useState10 = _slicedToArray(_useState9, 2),
    activityData = _useState10[0],
    setActivityData = _useState10[1];
  var variants = (avatar === null || avatar === void 0 ? void 0 : avatar.variants) || [avatar];
  var currentVariant = variants[currentVariantIndex];
  useEffect(function () {
    if (avatar !== null && avatar !== void 0 && avatar._id) {
      Promise.all([fetch("/api/avatar/".concat(avatar._id, "/narratives")).then(function (r) {
        return r.json();
      }), fetch("/api/avatar/".concat(avatar._id, "/memories")).then(function (r) {
        return r.json();
      }), fetch("/api/avatar/".concat(avatar._id, "/dungeon-actions")).then(function (r) {
        return r.json();
      })]).then(function (_ref15) {
        var _ref16 = _slicedToArray(_ref15, 3),
          narrativeData = _ref16[0],
          memoryData = _ref16[1],
          dungeonActions = _ref16[2];
        setActivityData({
          messages: (narrativeData === null || narrativeData === void 0 ? void 0 : narrativeData.recentMessages) || [],
          memories: (memoryData === null || memoryData === void 0 ? void 0 : memoryData.memories) || [],
          narratives: (narrativeData === null || narrativeData === void 0 ? void 0 : narrativeData.narratives) || [],
          dungeonStats: (avatar === null || avatar === void 0 ? void 0 : avatar.stats) || (narrativeData === null || narrativeData === void 0 ? void 0 : narrativeData.dungeonStats) || {
            attack: 0,
            defense: 0,
            hp: 0
          },
          dungeonActions: dungeonActions || []
        });
      })["catch"](function (error) {
        console.error('Error fetching activity data:', error);
      });
    }
  }, [avatar === null || avatar === void 0 ? void 0 : avatar._id, avatar === null || avatar === void 0 ? void 0 : avatar.stats]);

  // Automatic carousel
  useEffect(function () {
    if (variants.length > 1) {
      var interval = setInterval(function () {
        setCurrentVariantIndex(function (prev) {
          return (prev + 1) % variants.length;
        });
      }, 3000);
      return function () {
        return clearInterval(interval);
      };
    }
  }, [variants.length]);

  // Slide Component
  var VariantSlide = React.memo(function (_ref17) {
    var variant = _ref17.variant,
      active = _ref17.active;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "absolute inset-0 transition-opacity duration-500 ".concat(active ? 'opacity-100' : 'opacity-0'),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
        src: variant.imageUrl,
        alt: variant.name,
        className: "w-full aspect-[2/3] object-cover rounded-lg"
      })
    });
  });
  var tier = getTierFromModel(avatar.model);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 overflow-y-auto",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "bg-gray-800 rounded-lg p-6 max-w-4xl w-full max-h-[90vh] overflow-y-auto relative",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex justify-between items-start mb-6",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center gap-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-3xl",
            children: avatar.emoji
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
              className: "text-2xl font-bold",
              children: avatar.name
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(TierBadge, {
                tier: tier
              }), avatar.model && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                children: avatar.model
              }), avatar.emoji && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
                children: avatar.emoji
              })]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: onClose,
          className: "text-gray-400 hover:text-white text-2xl",
          children: "\xD7"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(AncestryChain, {
        ancestry: avatar.ancestry
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "grid grid-cols-3 gap-6",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: "relative",
            children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "relative aspect-[2/3]",
              children: [variants.map(function (variant, idx) {
                return /*#__PURE__*/(0, _jsxRuntime.jsx)(VariantSlide, {
                  variant: variant,
                  active: idx === currentVariantIndex
                }, idx);
              }), variants.length > 1 && /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                  className: "absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2 z-10",
                  children: variants.map(function (_, idx) {
                    return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
                      className: "w-2 h-2 rounded-full transition-colors ".concat(idx === currentVariantIndex ? 'bg-white' : 'bg-gray-500'),
                      onClick: function onClick() {
                        return setCurrentVariantIndex(idx);
                      }
                    }, idx);
                  })
                }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                  className: "absolute inset-y-0 left-0 right-0 flex items-center justify-between px-2",
                  children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
                    className: "bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-75 z-10",
                    onClick: function onClick(e) {
                      e.stopPropagation();
                      setCurrentVariantIndex(function (prev) {
                        return (prev - 1 + variants.length) % variants.length;
                      });
                    },
                    children: "\u2190"
                  }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
                    className: "bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-75 z-10",
                    onClick: function onClick(e) {
                      e.stopPropagation();
                      setCurrentVariantIndex(function (prev) {
                        return (prev + 1) % variants.length;
                      });
                    },
                    children: "\u2192"
                  })]
                })]
              })]
            })
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "bg-gray-700 rounded-lg p-4",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
              className: "text-xl font-bold mb-4",
              children: "Stats"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(StatsDisplay, {
              stats: avatar.stats,
              size: "large"
            }), wallet && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "mt-4",
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(XAuthButton, {
                avatarId: avatar._id,
                walletAddress: wallet.publicKey.toString(),
                onAuthChange: function onAuthChange(authorized) {
                  // Optionally update UI to show X posting capability
                }
              })
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "col-span-2 space-y-4",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: "bg-gray-700 rounded-lg p-4",
            children: variants.map(function (variant, idx) {
              return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                className: "transition-opacity duration-500 ".concat(idx === currentVariantIndex ? 'opacity-100 block' : 'opacity-0 hidden'),
                children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
                  className: "text-xl font-bold mb-2",
                  children: "Description"
                }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                  className: "prose prose-invert max-w-none",
                  children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(MarkdownContent, {
                    content: clipDescription(variant.description)
                  }), variant.dynamicPersonality && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
                    className: "mt-4 text-gray-400",
                    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h4", {
                      className: "font-bold mb-1",
                      children: "Personality"
                    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(MarkdownContent, {
                      content: clipDescription(variant.dynamicPersonality)
                    })]
                  })]
                })]
              }, idx);
            })
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "bg-gray-700 rounded-lg p-4",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
              className: "text-xl font-bold mb-4",
              children: "Recent Activity"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(ActivityFeed, {
              messages: activityData.messages,
              memories: activityData.memories,
              narratives: activityData.narratives,
              dungeonActions: activityData.dungeonActions
            })]
          })]
        })]
      })]
    })
  });
};

// Clip Description Helper Function
var clipDescription = function clipDescription(text) {
  if (!text) return '';
  var doubleNewline = text.indexOf('\n\n');
  return doubleNewline > -1 ? text.slice(0, doubleNewline) : text;
};

// Avatar Card Component
var AvatarCard = React.memo(function (_ref18) {
  var avatar = _ref18.avatar,
    onSelect = _ref18.onSelect;
  var _useState11 = useState(0),
    _useState12 = _slicedToArray(_useState11, 2),
    currentImageIndex = _useState12[0],
    setCurrentImageIndex = _useState12[1];
  var allAvatars = [avatar].concat(_toConsumableArray(avatar.alternateAvatars || []));
  useEffect(function () {
    if (allAvatars.length > 1) {
      var interval = setInterval(function () {
        setCurrentImageIndex(function (prev) {
          return (prev + 1) % allAvatars.length;
        });
      }, 3000); // Change image every 3 seconds
      return function () {
        return clearInterval(interval);
      };
    }
  }, [allAvatars.length]);
  var currentAvatar = allAvatars[currentImageIndex];
  var tier = getTierFromModel(avatar.model);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    onClick: function onClick() {
      return onSelect(avatar);
    },
    className: "bg-gray-800 rounded-lg p-2 cursor-pointer hover:bg-gray-700 transition-colors",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "relative mb-2",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
        src: currentAvatar.thumbnailUrl || currentAvatar.imageUrl,
        alt: currentAvatar.name,
        className: "w-full aspect-square object-cover rounded-lg"
      }), allAvatars.length > 1 && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        className: "absolute top-1 right-1 bg-blue-500 text-xs rounded-full w-5 h-5 flex items-center justify-center",
        children: allAvatars.length
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "space-y-1",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center gap-1 justify-between",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
          className: "text-sm font-bold truncate",
          children: avatar.name
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(TierBadge, {
          tier: tier
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "flex items-center gap-1 text-xs text-gray-400",
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
          children: ["\u2709\uFE0F ", avatar.messageCount]
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(StatsDisplay, {
        stats: avatar.stats,
        size: "small"
      })]
    })]
  });
});

// Avatar Search Component
var AvatarSearch = React.memo(function (_ref19) {
  var onSelect = _ref19.onSelect;
  var _useState13 = useState(''),
    _useState14 = _slicedToArray(_useState13, 2),
    query = _useState14[0],
    setQuery = _useState14[1];
  var _useState15 = useState([]),
    _useState16 = _slicedToArray(_useState15, 2),
    results = _useState16[0],
    setResults = _useState16[1];
  var _useState17 = useState(false),
    _useState18 = _slicedToArray(_useState17, 2),
    loading = _useState18[0],
    setLoading = _useState18[1];
  var searchTimeout = useRef(null);
  useEffect(function () {
    if (query.length < 2) {
      setResults([]);
      return;
    }
    clearTimeout(searchTimeout.current);
    searchTimeout.current = setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
      var response, data;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            setLoading(true);
            _context5.prev = 1;
            _context5.next = 4;
            return fetch("/api/avatars/search?name=".concat(encodeURIComponent(query)));
          case 4:
            response = _context5.sent;
            _context5.next = 7;
            return response.json();
          case 7:
            data = _context5.sent;
            setResults(data.avatars || []);
            _context5.next = 14;
            break;
          case 11:
            _context5.prev = 11;
            _context5.t0 = _context5["catch"](1);
            console.error('Search error:', _context5.t0);
          case 14:
            _context5.prev = 14;
            setLoading(false);
            return _context5.finish(14);
          case 17:
          case "end":
            return _context5.stop();
        }
      }, _callee5, null, [[1, 11, 14, 17]]);
    })), 300);
    return function () {
      return clearTimeout(searchTimeout.current);
    };
  }, [query]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "relative",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
      type: "text",
      value: query,
      onChange: function onChange(e) {
        return setQuery(e.target.value);
      },
      placeholder: "Search avatars...",
      className: "w-full px-4 py-2 bg-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
    }), loading && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "absolute right-3 top-3",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "animate-spin h-4 w-4 border-2 border-blue-500 rounded-full border-t-transparent"
      })
    }), results.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "absolute mt-1 w-full bg-gray-800 rounded-lg shadow-lg z-50 max-h-60 overflow-auto",
      children: results.map(function (avatar) {
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "flex items-center gap-3 p-2 hover:bg-gray-700 cursor-pointer",
          onClick: function onClick() {
            onSelect(avatar);
            setQuery('');
            setResults([]);
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
            src: avatar.thumbnailUrl || avatar.imageUrl,
            alt: avatar.name,
            className: "w-10 h-10 rounded-full object-cover"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "font-medium",
              children: avatar.name
            }), avatar.emoji && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "text-sm text-gray-400",
              children: avatar.emoji
            })]
          })]
        }, avatar._id);
      })
    })]
  });
});

// Combat Log Entry Component
var CombatLogEntry = React.memo(function (_ref21) {
  var entry = _ref21.entry,
    onAvatarClick = _ref21.onAvatarClick;
  var handleClick = function handleClick(avatar, event) {
    event.stopPropagation();
    if (avatar && onAvatarClick) {
      onAvatarClick(avatar);
    }
  };
  var CombatantDisplay = function CombatantDisplay(_ref22) {
    var name = _ref22.name,
      emoji = _ref22.emoji,
      imageUrl = _ref22.imageUrl,
      thumbnailUrl = _ref22.thumbnailUrl,
      id = _ref22.id;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex items-center gap-2",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "relative",
        children: imageUrl ? /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
          src: thumbnailUrl || imageUrl,
          alt: name,
          className: "w-10 h-10 rounded-full object-cover cursor-pointer hover:opacity-75 border-2 border-gray-700",
          onClick: function onClick(e) {
            return handleClick({
              _id: id,
              name: name,
              imageUrl: imageUrl
            }, e);
          }
        }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "w-10 h-10 rounded-full bg-gray-700 flex items-center justify-center",
          children: emoji || '👤'
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "text-sm text-gray-300 hover:text-white cursor-pointer font-medium",
          onClick: function onClick(e) {
            return handleClick({
              _id: id,
              name: name,
              imageUrl: imageUrl
            }, e);
          },
          children: name
        }), emoji && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "text-xs text-gray-400",
          children: emoji
        })]
      })]
    });
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "bg-gray-800 rounded-lg p-4 transition-colors hover:bg-gray-750",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex items-center gap-3",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(CombatantDisplay, {
        name: entry.actorName,
        emoji: entry.actorEmoji,
        imageUrl: entry.actorImageUrl,
        thumbnailUrl: entry.actorThumbnailUrl,
        id: entry.actorId
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex-grow flex items-center justify-center gap-2 px-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "text-gray-400",
          children: "\u2694\uFE0F"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "text-sm font-medium text-gray-300",
          children: entry.result.substring(0, 80)
        })]
      }), entry.targetName && /*#__PURE__*/(0, _jsxRuntime.jsx)(CombatantDisplay, {
        name: entry.targetName,
        emoji: entry.targetEmoji,
        imageUrl: entry.targetImageUrl,
        thumbnailUrl: entry.targetThumbnailUrl,
        id: entry.targetId
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "mt-2 text-xs text-gray-500 text-right",
      children: new Date(entry.timestamp).toLocaleString()
    })]
  });
});

// Combat Log Component
var CombatLog = React.memo(function (_ref23) {
  var onAvatarSelect = _ref23.onAvatarSelect;
  var _useState19 = useState([]),
    _useState20 = _slicedToArray(_useState19, 2),
    combatLog = _useState20[0],
    setCombatLog = _useState20[1];
  var _useState21 = useState(true),
    _useState22 = _slicedToArray(_useState21, 2),
    loading = _useState22[0],
    setLoading = _useState22[1];
  useEffect(function () {
    var fetchCombatLog = /*#__PURE__*/function () {
      var _ref24 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var response, data;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.prev = 0;
              _context6.next = 3;
              return fetch('/api/dungeon/log');
            case 3:
              response = _context6.sent;
              _context6.next = 6;
              return response.json();
            case 6:
              data = _context6.sent;
              setCombatLog(data);
              _context6.next = 13;
              break;
            case 10:
              _context6.prev = 10;
              _context6.t0 = _context6["catch"](0);
              console.error('Error fetching combat log:', _context6.t0);
            case 13:
              _context6.prev = 13;
              setLoading(false);
              return _context6.finish(13);
            case 16:
            case "end":
              return _context6.stop();
          }
        }, _callee6, null, [[0, 10, 13, 16]]);
      }));
      return function fetchCombatLog() {
        return _ref24.apply(this, arguments);
      };
    }();
    fetchCombatLog();
    var interval = setInterval(fetchCombatLog, 5000);
    return function () {
      return clearInterval(interval);
    };
  }, []);
  if (loading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-center py-4",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto"
      })
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "space-y-4",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
      className: "text-2xl font-bold mb-6",
      children: "Recent Combat Actions"
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "space-y-4 max-w-3xl mx-auto",
      children: [combatLog.map(function (entry, index) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(CombatLogEntry, {
          entry: entry,
          onAvatarClick: onAvatarSelect
        }, index);
      }), combatLog.length === 0 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "text-center py-8 text-gray-500",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "text-4xl mb-2",
          children: "\u2694\uFE0F"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "No combat actions yet"
        })]
      })]
    })]
  });
});

// Leaderboard View Component
var LeaderboardView = React.memo(function () {
  var _useState23 = useState([]),
    _useState24 = _slicedToArray(_useState23, 2),
    leaderboard = _useState24[0],
    setLeaderboard = _useState24[1];
  var _useState25 = useState(true),
    _useState26 = _slicedToArray(_useState25, 2),
    loading = _useState26[0],
    setLoading = _useState26[1];
  useEffect(function () {
    var fetchLeaderboard = /*#__PURE__*/function () {
      var _ref25 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        var response, data;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.prev = 0;
              _context7.next = 3;
              return fetch('/api/leaderboard');
            case 3:
              response = _context7.sent;
              _context7.next = 6;
              return response.json();
            case 6:
              data = _context7.sent;
              setLeaderboard(data.avatars || []);
              _context7.next = 13;
              break;
            case 10:
              _context7.prev = 10;
              _context7.t0 = _context7["catch"](0);
              console.error('Error fetching leaderboard:', _context7.t0);
            case 13:
              _context7.prev = 13;
              setLoading(false);
              return _context7.finish(13);
            case 16:
            case "end":
              return _context7.stop();
          }
        }, _callee7, null, [[0, 10, 13, 16]]);
      }));
      return function fetchLeaderboard() {
        return _ref25.apply(this, arguments);
      };
    }();
    fetchLeaderboard();
  }, []);
  if (loading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-center py-4",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto"
      })
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "max-w-4xl mx-auto",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("table", {
      className: "w-full bg-gray-800 rounded-lg overflow-hidden",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("thead", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("tr", {
          className: "bg-gray-700",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-left",
            children: "Rank"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-left",
            children: "Avatar"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-left",
            children: "Name"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-right",
            children: "Score"
          })]
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
        children: leaderboard.map(function (avatar, index) {
          return /*#__PURE__*/(0, _jsxRuntime.jsxs)("tr", {
            className: "border-t border-gray-700 hover:bg-gray-700",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4",
              children: index + 1
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4",
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
                src: avatar.thumbnailUrl || avatar.imageUrl,
                alt: avatar.name,
                className: "w-10 h-10 rounded-full"
              })
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4",
              children: avatar.name
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4 text-right",
              children: avatar.score || 0
            })]
          }, avatar._id);
        })
      })]
    })
  });
});

// View Toggle Component
var ViewToggle = React.memo(function (_ref26) {
  var currentView = _ref26.currentView,
    onViewChange = _ref26.onViewChange;
  var views = [{
    name: 'Collection',
    color: 'bg-green-600',
    key: 'collection'
  }, {
    name: 'Leaderboard',
    color: 'bg-purple-600',
    key: 'leaderboard'
  }, {
    name: 'Combat Log',
    color: 'bg-red-600',
    key: 'combat'
  }, {
    name: 'Tribes',
    color: 'bg-blue-600',
    key: 'tribes'
  }];
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "flex justify-center gap-4 mb-8",
    children: views.map(function (view) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
        className: "px-4 py-2 rounded ".concat(currentView === view.key ? "".concat(view.color, " text-white") : 'bg-gray-700 text-gray-300 hover:bg-gray-600'),
        onClick: function onClick() {
          return onViewChange(view.key);
        },
        children: view.name
      }, view.key);
    })
  });
});

// Family Card Component
var FamilyCard = React.memo(function (_ref27) {
  var family = _ref27.family,
    onSelect = _ref27.onSelect;
  var descendantsCount = Array.isArray(family.descendants) ? family.descendants.length : 0;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    onClick: function onClick() {
      return onSelect(family);
    },
    className: "bg-gray-800 rounded-lg p-4 cursor-pointer hover:bg-gray-700 transition-colors",
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "flex items-center justify-between",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center gap-4",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
          src: family.thumbnailUrl || family.imageUrl,
          alt: family.name,
          className: "w-16 h-16 rounded-full object-cover"
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-2xl",
            children: family.emoji
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: "text-xl font-bold",
            children: family.name
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "text-gray-400",
            children: [descendantsCount, " descendants"]
          })]
        })]
      })
    })
  });
});

// Tribes View Component
var TribesView = React.memo(function (_ref28) {
  var onAvatarSelect = _ref28.onAvatarSelect;
  var _useState27 = useState([]),
    _useState28 = _slicedToArray(_useState27, 2),
    tribeCounts = _useState28[0],
    setTribeCounts = _useState28[1];
  var _useState29 = useState(null),
    _useState30 = _slicedToArray(_useState29, 2),
    selectedEmoji = _useState30[0],
    setSelectedEmoji = _useState30[1];
  var _useState31 = useState(null),
    _useState32 = _slicedToArray(_useState31, 2),
    selectedTribe = _useState32[0],
    setSelectedTribe = _useState32[1];
  var _useState33 = useState(true),
    _useState34 = _slicedToArray(_useState33, 2),
    loading = _useState34[0],
    setLoading = _useState34[1];
  var _useState35 = useState(false),
    _useState36 = _slicedToArray(_useState35, 2),
    loadingTribe = _useState36[0],
    setLoadingTribe = _useState36[1];
  var _useState37 = useState(null),
    _useState38 = _slicedToArray(_useState37, 2),
    error = _useState38[0],
    setError = _useState38[1];
  var _useState39 = useState(0),
    _useState40 = _slicedToArray(_useState39, 2),
    page = _useState40[0],
    setPage = _useState40[1];
  var ITEMS_PER_PAGE = 20;
  var sanitizeMembers = useCallback(function (members) {
    if (!Array.isArray(members)) return [];
    return members.filter(function (member) {
      return member && _typeof(member) === 'object' && typeof member._id === 'string' && typeof member.name === 'string' && (typeof member.thumbnailUrl === 'string' || typeof member.imageUrl === 'string');
    });
  }, []);
  var sanitizeTribe = useCallback(function (tribe) {
    if (!tribe || _typeof(tribe) !== 'object' || typeof tribe.emoji !== 'string') return null;
    var members = sanitizeMembers(tribe.members);
    return {
      emoji: tribe.emoji,
      count: tribe.count,
      members: members
    };
  }, [sanitizeMembers]);
  useEffect(function () {
    var fetchTribeCounts = /*#__PURE__*/function () {
      var _ref29 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var response, data;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.prev = 0;
              _context8.next = 3;
              return fetch('/api/tribes/counts');
            case 3:
              response = _context8.sent;
              if (response.ok) {
                _context8.next = 6;
                break;
              }
              throw new Error("HTTP error! status: ".concat(response.status));
            case 6:
              _context8.next = 8;
              return response.json();
            case 8:
              data = _context8.sent;
              setTribeCounts(data || []);
              _context8.next = 16;
              break;
            case 12:
              _context8.prev = 12;
              _context8.t0 = _context8["catch"](0);
              console.error('Error fetching tribe counts:', _context8.t0);
              setError(_context8.t0.message);
            case 16:
              _context8.prev = 16;
              setLoading(false);
              return _context8.finish(16);
            case 19:
            case "end":
              return _context8.stop();
          }
        }, _callee8, null, [[0, 12, 16, 19]]);
      }));
      return function fetchTribeCounts() {
        return _ref29.apply(this, arguments);
      };
    }();
    fetchTribeCounts();
  }, []);
  var fetchTribeDetails = useCallback(/*#__PURE__*/function () {
    var _ref30 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(emoji) {
      var response, data, sanitizedTribe;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            setLoadingTribe(true);
            _context9.prev = 1;
            _context9.next = 4;
            return fetch("/api/tribes/".concat(encodeURIComponent(emoji), "?skip=").concat(page * ITEMS_PER_PAGE, "&limit=").concat(ITEMS_PER_PAGE));
          case 4:
            response = _context9.sent;
            if (response.ok) {
              _context9.next = 7;
              break;
            }
            throw new Error("HTTP error! status: ".concat(response.status));
          case 7:
            _context9.next = 9;
            return response.json();
          case 9:
            data = _context9.sent;
            sanitizedTribe = sanitizeTribe(data);
            setSelectedTribe(sanitizedTribe);
            _context9.next = 18;
            break;
          case 14:
            _context9.prev = 14;
            _context9.t0 = _context9["catch"](1);
            console.error('Error fetching tribe details:', _context9.t0);
            setError(_context9.t0.message);
          case 18:
            _context9.prev = 18;
            setLoadingTribe(false);
            return _context9.finish(18);
          case 21:
          case "end":
            return _context9.stop();
        }
      }, _callee9, null, [[1, 14, 18, 21]]);
    }));
    return function (_x2) {
      return _ref30.apply(this, arguments);
    };
  }(), [page, sanitizeTribe]);
  useEffect(function () {
    if (selectedEmoji) {
      fetchTribeDetails(selectedEmoji);
    }
  }, [selectedEmoji, fetchTribeDetails]);
  if (loading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-center py-4",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto"
      })
    });
  }
  if (error) {
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "text-center text-red-500 py-4",
      children: ["Error loading tribes: ", error]
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "flex flex-wrap gap-4 mb-8 justify-center",
      children: tribeCounts.map(function (tribe) {
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
          onClick: function onClick() {
            return setSelectedEmoji(tribe.emoji);
          },
          className: "flex items-center gap-2 px-4 py-2 rounded-full ".concat(selectedEmoji === tribe.emoji ? 'bg-blue-600 text-white' : 'bg-gray-700 hover:bg-gray-600'),
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-2xl",
            children: tribe.emoji
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "text-sm font-medium",
            children: tribe.count
          })]
        }, tribe.emoji);
      })
    }), selectedTribe ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "bg-gray-800 rounded-lg p-6",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center gap-4 mb-6",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "text-4xl",
          children: selectedTribe.emoji
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("h2", {
            className: "text-2xl font-bold",
            children: [selectedTribe.count, " Members"]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            className: "text-gray-400",
            children: "Click an avatar to view details"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-4",
        children: selectedTribe.members.map(function (member) {
          return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            onClick: function onClick() {
              return onAvatarSelect(member);
            },
            className: "cursor-pointer group",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              className: "aspect-square overflow-hidden rounded-lg mb-2",
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
                src: member.thumbnailUrl || member.imageUrl,
                alt: member.name,
                className: "w-full h-full object-cover transform group-hover:scale-110 transition-transform"
              })
            }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: "text-center",
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "font-medium truncate",
                children: member.name
              }), member.model && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "text-xs text-gray-400",
                children: member.model
              }), member.emoji && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: "text-sm",
                children: member.emoji
              })]
            })]
          }, member._id);
        })
      })]
    }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-center text-gray-400",
      children: "Select an emoji to view tribe members"
    })]
  });
});

// Burn Token Button Component
var BurnTokenButton = React.memo(function (_ref31) {
  var wallet = _ref31.wallet,
    onSuccess = _ref31.onSuccess;
  var _useState41 = useState(false),
    _useState42 = _slicedToArray(_useState41, 2),
    loading = _useState42[0],
    setLoading = _useState42[1];
  var _useState43 = useState(null),
    _useState44 = _slicedToArray(_useState43, 2),
    error = _useState44[0],
    setError = _useState44[1];
  var handleBurn = /*#__PURE__*/function () {
    var _ref32 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
      var burnTx, signedTx, signature;
      return _regeneratorRuntime().wrap(function _callee10$(_context10) {
        while (1) switch (_context10.prev = _context10.next) {
          case 0:
            _context10.prev = 0;
            setLoading(true);
            setError(null);
            _context10.next = 5;
            return fetch('/api/tokens/burn', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                walletAddress: wallet.publicKey.toString()
              })
            }).then(function (r) {
              return r.json();
            });
          case 5:
            burnTx = _context10.sent;
            _context10.next = 8;
            return wallet.signTransaction(burnTx.transaction);
          case 8:
            signedTx = _context10.sent;
            _context10.next = 11;
            return fetch('/api/tokens/burn/confirm', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                signature: signedTx.signature,
                walletAddress: wallet.publicKey.toString()
              })
            }).then(function (r) {
              return r.json();
            });
          case 11:
            signature = _context10.sent;
            if (!signature.success) {
              _context10.next = 16;
              break;
            }
            onSuccess === null || onSuccess === void 0 || onSuccess();
            _context10.next = 17;
            break;
          case 16:
            throw new Error(signature.error || 'Burn failed');
          case 17:
            _context10.next = 23;
            break;
          case 19:
            _context10.prev = 19;
            _context10.t0 = _context10["catch"](0);
            setError(_context10.t0.message);
            console.error('Burn error:', _context10.t0);
          case 23:
            _context10.prev = 23;
            setLoading(false);
            return _context10.finish(23);
          case 26:
          case "end":
            return _context10.stop();
        }
      }, _callee10, null, [[0, 19, 23, 26]]);
    }));
    return function handleBurn() {
      return _ref32.apply(this, arguments);
    };
  }();
  if (!wallet) return null;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
    onClick: handleBurn,
    disabled: loading,
    className: "px-4 py-2 rounded-lg ".concat(loading ? 'bg-gray-600 cursor-not-allowed' : 'bg-purple-600 hover:bg-purple-700'),
    children: [loading ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
      className: "flex items-center gap-2",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "w-4 h-4 border-2 border-white rounded-full animate-spin border-t-transparent"
      }), "Burning..."]
    }) : 'Burn 1000 Tokens for Random NFT', error && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-red-500 text-sm mt-2",
      children: error
    })]
  });
});

// Wallet Button Component
var WalletButton = React.memo(function (_ref33) {
  var onWalletChange = _ref33.onWalletChange;
  var _useState45 = useState(null),
    _useState46 = _slicedToArray(_useState45, 2),
    wallet = _useState46[0],
    setWallet = _useState46[1];
  var _useState47 = useState(null),
    _useState48 = _slicedToArray(_useState47, 2),
    address = _useState48[0],
    setAddress = _useState48[1];
  var connectWallet = useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
    var isMobile, resp;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          _context11.prev = 0;
          isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
          if (!(isMobile && !window.solana)) {
            _context11.next = 5;
            break;
          }
          window.location.href = 'https://phantom.app/ul/browse/' + window.location.href;
          return _context11.abrupt("return");
        case 5:
          if (window.solana) {
            _context11.next = 9;
            break;
          }
          alert('Please install Phantom wallet!');
          window.open('https://phantom.app/', '_blank');
          return _context11.abrupt("return");
        case 9:
          _context11.next = 11;
          return window.solana.connect();
        case 11:
          resp = _context11.sent;
          setWallet(window.solana);
          setAddress(resp.publicKey.toString());
          onWalletChange === null || onWalletChange === void 0 || onWalletChange(window.solana);
          _context11.next = 20;
          break;
        case 17:
          _context11.prev = 17;
          _context11.t0 = _context11["catch"](0);
          console.error('Failed to connect wallet:', _context11.t0);
        case 20:
        case "end":
          return _context11.stop();
      }
    }, _callee11, null, [[0, 17]]);
  })), [onWalletChange]);
  var disconnectWallet = useCallback(function () {
    if (wallet) {
      wallet.disconnect();
      setWallet(null);
      setAddress(null);
      onWalletChange === null || onWalletChange === void 0 || onWalletChange(null);
    }
  }, [wallet, onWalletChange]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "fixed top-4 right-4 z-50",
    children: !wallet ? /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: connectWallet,
      className: "bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg flex items-center gap-2",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        children: "Connect Wallet"
      })
    }) : /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
      onClick: disconnectWallet,
      className: "bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg flex items-center gap-2",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        className: "truncate w-32",
        children: address
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        children: "\xD7"
      })]
    })
  });
});

// Avatar Detail Modal might use some animations or portals for better UX,
// but for simplicity, it's kept as a regular component.

/** Main App Component **/

var App = function App() {
  var _useState49 = useState([]),
    _useState50 = _slicedToArray(_useState49, 2),
    avatars = _useState50[0],
    setAvatars = _useState50[1];
  var _useState51 = useState(null),
    _useState52 = _slicedToArray(_useState51, 2),
    selectedAvatar = _useState52[0],
    setSelectedAvatar = _useState52[1];
  var _useState53 = useState(false),
    _useState54 = _slicedToArray(_useState53, 2),
    loading = _useState54[0],
    setLoading = _useState54[1];
  var _useState55 = useState(true),
    _useState56 = _slicedToArray(_useState55, 2),
    hasMore = _useState56[0],
    setHasMore = _useState56[1];
  var _useState57 = useState(null),
    _useState58 = _slicedToArray(_useState57, 2),
    lastMessageCount = _useState58[0],
    setLastMessageCount = _useState58[1];
  var _useState59 = useState(null),
    _useState60 = _slicedToArray(_useState59, 2),
    lastId = _useState60[0],
    setLastId = _useState60[1];
  var _useState61 = useState('All'),
    _useState62 = _slicedToArray(_useState61, 2),
    selectedTier = _useState62[0],
    setSelectedTier = _useState62[1];
  var _useState63 = useState('leaderboard'),
    _useState64 = _slicedToArray(_useState63, 2),
    currentView = _useState64[0],
    setCurrentView = _useState64[1];
  var _useState65 = useState(null),
    _useState66 = _slicedToArray(_useState65, 2),
    modalAvatar = _useState66[0],
    setModalAvatar = _useState66[1];
  var _useState67 = useState(null),
    _useState68 = _slicedToArray(_useState67, 2),
    wallet = _useState68[0],
    setWallet = _useState68[1];
  var loadAvatars = useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
    var isInitial,
      url,
      res,
      data,
      _args12 = arguments;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          isInitial = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : false;
          if (!(loading || !hasMore && !isInitial)) {
            _context12.next = 3;
            break;
          }
          return _context12.abrupt("return");
        case 3:
          setLoading(true);
          _context12.prev = 4;
          url = new URL('/api/leaderboard', window.location.origin);
          url.searchParams.set('limit', '24');
          if (selectedTier !== 'All') {
            url.searchParams.set('tier', selectedTier);
          }
          if (!isInitial && lastMessageCount !== null && lastId) {
            url.searchParams.set('lastMessageCount', lastMessageCount);
            url.searchParams.set('lastId', lastId);
          }
          _context12.next = 11;
          return fetch(url);
        case 11:
          res = _context12.sent;
          if (res.ok) {
            _context12.next = 14;
            break;
          }
          throw new Error("HTTP error! status: ".concat(res.status));
        case 14:
          _context12.next = 16;
          return res.json();
        case 16:
          data = _context12.sent;
          if (isInitial) {
            setAvatars(data.avatars || []);
          } else {
            setAvatars(function (prev) {
              return [].concat(_toConsumableArray(prev), _toConsumableArray(data.avatars || []));
            });
          }
          setHasMore(data.hasMore);
          setLastMessageCount(data.lastMessageCount);
          setLastId(data.lastId);
          _context12.next = 27;
          break;
        case 23:
          _context12.prev = 23;
          _context12.t0 = _context12["catch"](4);
          console.error('Error loading avatars:', _context12.t0);
          setHasMore(false);
        case 27:
          _context12.prev = 27;
          setLoading(false);
          return _context12.finish(27);
        case 30:
        case "end":
          return _context12.stop();
      }
    }, _callee12, null, [[4, 23, 27, 30]]);
  })), [loading, hasMore, selectedTier, lastMessageCount, lastId]);
  useEffect(function () {
    loadAvatars(true);
  }, [loadAvatars]);
  useEffect(function () {
    var handleScroll = function handleScroll() {
      if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 1000 && !loading && hasMore) {
        loadAvatars();
      }
    };
    window.addEventListener('scroll', handleScroll);
    return function () {
      return window.removeEventListener('scroll', handleScroll);
    };
  }, [loading, hasMore, loadAvatars]);
  useEffect(function () {
    setLastMessageCount(null);
    setLastId(null);
    setHasMore(true);
    setAvatars([]);
    loadAvatars(true);
  }, [selectedTier, loadAvatars]);

  // Handler for avatar selection from any view
  var handleAvatarSelect = useCallback(function (avatar) {
    // Fetch full avatar details if needed
    fetch("/api/avatars/".concat(avatar._id)).then(function (res) {
      return res.json();
    }).then(function (data) {
      return setModalAvatar(data);
    })["catch"](function (err) {
      console.error('Error fetching avatar details:', err);
      setModalAvatar(avatar); // Fallback to basic avatar data
    });
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "container mx-auto px-4 py-8",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(WalletButton, {
      onWalletChange: setWallet
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
      className: "text-4xl font-bold mb-8 text-center",
      children: "Avatar Dashboard"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(ViewToggle, {
      currentView: currentView,
      onViewChange: setCurrentView
    }), currentView === 'collection' ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(TierFilter, {
        selectedTier: selectedTier,
        onTierChange: setSelectedTier
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(AvatarSearch, {
        onSelect: handleAvatarSelect
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "grid gap-4 grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 mt-4",
        children: avatars.map(function (avatar) {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(AvatarCard, {
            avatar: avatar,
            onSelect: handleAvatarSelect
          }, avatar._id);
        })
      }), loading && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "text-center py-4",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto"
        })
      }), modalAvatar && /*#__PURE__*/(0, _jsxRuntime.jsx)(AvatarDetailModal, {
        avatar: modalAvatar,
        onClose: function onClose() {
          return setModalAvatar(null);
        },
        wallet: wallet
      })]
    }) : currentView === 'leaderboard' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(LeaderboardView, {}) : currentView === 'combat' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(CombatLog, {
      onAvatarSelect: handleAvatarSelect
    }) : currentView === 'tribes' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(TribesView, {
      onAvatarSelect: handleAvatarSelect
    }) : null, wallet && /*#__PURE__*/(0, _jsxRuntime.jsx)(BurnTokenButton, {
      wallet: wallet,
      onSuccess: function onSuccess() {/* Handle success */}
    })]
  });
};

// Root render
var rootElement = document.getElementById('root');
ReactDOM.createRoot(rootElement).render(/*#__PURE__*/(0, _jsxRuntime.jsx)(App, {}));
