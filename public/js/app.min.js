"use strict";

// State management
const state = {
  wallet: null,
  activeTab: 'owned',
  avatars: [],
  loading: false
};
async function connectWallet() {
  try {
    var _window;
    const phantomProvider = (_window = window) === null || _window === void 0 || (_window = _window.phantom) === null || _window === void 0 ? void 0 : _window.solana;
    if (!phantomProvider) {
      alert('Please install Phantom wallet');
      return;
    }

    // Wait for provider to be ready
    await new Promise(resolve => setTimeout(resolve, 100));
    const resp = await phantomProvider.connect();
    if (!(resp !== null && resp !== void 0 && resp.publicKey)) {
      throw new Error('No public key received');
    }
    state.wallet = {
      publicKey: resp.publicKey.toString()
    };
    await loadContent();
  } catch (err) {
    console.error('Failed to connect wallet:', err);
    alert('Failed to connect wallet. Please try again.');
    state.wallet = null;
  }
}

// DOM Elements
const content = document.getElementById('content');
const tabButtons = document.querySelectorAll('[data-tab]');

// Event Listeners
tabButtons.forEach(button => {
  button.addEventListener('click', () => {
    setActiveTab(button.dataset.tab);
  });
});

// Tab Management
function setActiveTab(tabName) {
  state.activeTab = tabName;

  // Update UI
  tabButtons.forEach(btn => {
    btn.classList.toggle('bg-blue-600', btn.dataset.tab === tabName);
    btn.classList.toggle('bg-gray-700', btn.dataset.tab !== tabName);
  });

  // Load content
  loadContent();
}

// Content Loading
async function loadContent() {
  content.innerHTML = '<div class="text-center py-12">Loading...</div>';
  state.loading = true;
  try {
    switch (state.activeTab) {
      case 'owned':
        if (!state.wallet) {
          content.innerHTML = "\n            <div class=\"text-center py-12 col-span-3\">\n              <p class=\"mb-4\">Connect your wallet to view owned avatars</p>\n              <button class=\"px-4 py-2 bg-blue-600 rounded\" onclick=\"connectWallet()\">\n                Connect Wallet\n              </button>\n            </div>";
          break;
        }
        await loadOwnedAvatars();
        break;
      case 'actions':
        await loadActionLog();
        break;
      case 'leaderboard':
        await loadLeaderboard();
        break;
      case 'tribes':
        content.innerHTML = '<div class="text-center py-12">Tribes content coming soon</div>';
        break;
    }
  } catch (error) {
    console.error('Error loading content:', error);
    content.innerHTML = '<div class="text-center py-12 text-red-500">Error loading content</div>';
  } finally {
    state.loading = false;
  }
}

// Avatar Display
function renderAvatar(avatar) {
  return "\n    <div class=\"bg-gray-800 rounded-lg p-4 hover:bg-gray-700 transition\">\n      <img \n        src=\"".concat(avatar.thumbnailUrl || avatar.imageUrl, "\" \n        alt=\"").concat(avatar.name, "\"\n        class=\"w-full aspect-square object-cover rounded-lg mb-4\"\n      >\n      <h3 class=\"text-lg font-semibold\">").concat(avatar.name, "</h3>\n      ").concat(avatar.model ? "<p class=\"text-sm text-gray-400\">".concat(avatar.model, "</p>") : '', "\n      <div class=\"mt-2\">\n        <span class=\"px-2 py-1 rounded text-xs font-bold ").concat(getTierColor(avatar.model), "\">\n          Tier ").concat(getTierFromModel(avatar.model), "\n        </span>\n      </div>\n    </div>\n  ");
}

// Utility Functions
function getTierColor(model) {
  const tier = getTierFromModel(model);
  const colors = {
    'S': 'bg-purple-600',
    'A': 'bg-blue-600',
    'B': 'bg-green-600',
    'C': 'bg-yellow-600',
    'U': 'bg-gray-600'
  };
  return colors[tier] || colors['U'];
}
function getTierFromModel(model) {
  if (!model) return 'U';
  if (model.includes('gpt-4')) return 'S';
  if (model.includes('gpt-3.5')) return 'A';
  if (model.includes('claude')) return 'B';
  return 'C';
}

// Data Loading Functions
async function loadOwnedAvatars() {
  try {
    var _state$wallet;
    if (!((_state$wallet = state.wallet) !== null && _state$wallet !== void 0 && _state$wallet.publicKey)) {
      content.innerHTML = '<div class="text-center py-12">Please connect your wallet first</div>';
      return;
    }
    const response = await fetch("/api/avatars?view=owned&walletAddress=".concat(state.wallet.publicKey, "&page=1&limit=12"));
    if (!response.ok) {
      throw new Error("HTTP error! status: ".concat(response.status));
    }
    const data = await response.json();
    if (!data.avatars) {
      content.innerHTML = '<div class="text-center py-12">No avatars found</div>';
      return;
    }
    content.innerHTML = data.avatars.map(renderAvatar).join('');
  } catch (error) {
    console.error('Error loading owned avatars:', error);
    content.innerHTML = "<div class=\"text-center py-12 text-red-500\">\n      Failed to load avatars: ".concat(error.message, "\n    </div>");
  }
}
async function loadActionLog() {
  try {
    content.innerHTML = '<div class="text-center py-12">Loading action log...</div>';
    const response = await fetch('/api/dungeon/log');
    if (!response.ok) {
      throw new Error("HTTP error! status: ".concat(response.status));
    }
    const actions = await response.json();
    if (!(actions !== null && actions !== void 0 && actions.length)) {
      content.innerHTML = '<div class="text-center py-12">No actions found</div>';
      return;
    }
    content.innerHTML = actions.map(action => {
      var _action$actorStats, _action$actorStats2, _action$actorStats3, _action$actorStats4, _action$actorStats5, _action$actorStats6, _action$actorStats7, _action$actorStats8, _action$actorStats9, _action$actorStats10, _action$actorStats11, _action$actorStats12, _action$actorStats13, _action$targetStats, _action$targetStats2, _action$targetStats3, _action$targetStats4, _action$targetStats5, _action$targetStats6, _action$targetStats7, _action$targetStats8, _action$targetStats9, _action$targetStats10, _action$targetStats11, _action$targetStats12, _action$targetStats13;
      return "\n      <div class=\"bg-gray-800 p-4 mb-2 rounded-lg hover:bg-gray-700 transition-colors\">\n        <div class=\"flex items-center gap-4\">\n          ".concat(action.actorThumbnailUrl ? "\n            <img src=\"".concat(action.actorThumbnailUrl, "\" alt=\"").concat(action.actorName, "\" \n                 class=\"w-12 h-12 rounded-full\">") : '', "\n          <div class=\"flex-1\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <span class=\"font-semibold\">").concat(action.actorName, "</span>\n                <span class=\"text-gray-400\">\n                  ").concat(action.action === 'attack' ? '‚öîÔ∏è attacked' : action.action === 'defend' ? 'üõ°Ô∏è defended' : action.action === 'move' ? 'üö∂‚Äç‚ôÇÔ∏è moved to' : action.action === 'remember' ? 'üí≠ remembered' : action.action === 'xpost' ? 'üê¶ posted' : "used ".concat(action.action), "\n                </span>\n                ").concat(action.targetName ? "<span class=\"font-semibold\"> \u2192 ".concat(action.targetName, "</span>") : '', "\n              </div>\n              <button \n                onclick=\"this.closest('.bg-gray-800').querySelector('.action-details').classList.toggle('hidden')\"\n                class=\"text-gray-400 hover:text-white transition-colors\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"text-sm text-gray-500\">\n              ").concat(new Date(action.timestamp).toLocaleString(), "\n            </div>\n            <div class=\"action-details hidden mt-4 p-3 bg-gray-900 rounded-lg\">\n              ").concat(['attack', 'defend'].includes(action.action) ? "<div class=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <h4 class=\"font-semibold mb-2\">\u2694\uFE0F Actor Stats</h4>\n                    <div class=\"flex gap-4 mb-4\">\n                      <div class=\"text-center\">\n                        <div class=\"text-2xl font-bold text-red-500\">".concat(((_action$actorStats = action.actorStats) === null || _action$actorStats === void 0 ? void 0 : _action$actorStats.hp) || 'N/A', "</div>") : '', "\n                      <div class=\"text-xs text-gray-400\">HP</div>\n                    </div>\n                    <div class=\"text-center\">\n                      <div class=\"text-2xl font-bold text-blue-500\">").concat(((_action$actorStats2 = action.actorStats) === null || _action$actorStats2 === void 0 ? void 0 : _action$actorStats2.strength) || 'N/A', "</div>\n                      <div class=\"text-xs text-gray-400\">STR</div>\n                    </div>\n                    <div class=\"text-center\">\n                      <div class=\"text-2xl font-bold text-green-500\">").concat(10 + Math.floor((((_action$actorStats3 = action.actorStats) === null || _action$actorStats3 === void 0 ? void 0 : _action$actorStats3.dexterity) - 10) / 2) || 'N/A', "</div>\n                      <div class=\"text-xs text-gray-400\">AC</div>\n                    </div>\n                  </div>\n                  <div class=\"grid grid-cols-2 gap-2 text-sm\">\n                    <p>DEX: ").concat(((_action$actorStats4 = action.actorStats) === null || _action$actorStats4 === void 0 ? void 0 : _action$actorStats4.dexterity) || 'N/A', " (").concat(Math.floor((((_action$actorStats5 = action.actorStats) === null || _action$actorStats5 === void 0 ? void 0 : _action$actorStats5.dexterity) - 10) / 2) || '0', ")</p>\n                    <p>CON: ").concat(((_action$actorStats6 = action.actorStats) === null || _action$actorStats6 === void 0 ? void 0 : _action$actorStats6.constitution) || 'N/A', " (").concat(Math.floor((((_action$actorStats7 = action.actorStats) === null || _action$actorStats7 === void 0 ? void 0 : _action$actorStats7.constitution) - 10) / 2) || '0', ")</p>\n                    <p>INT: ").concat(((_action$actorStats8 = action.actorStats) === null || _action$actorStats8 === void 0 ? void 0 : _action$actorStats8.intelligence) || 'N/A', " (").concat(Math.floor((((_action$actorStats9 = action.actorStats) === null || _action$actorStats9 === void 0 ? void 0 : _action$actorStats9.intelligence) - 10) / 2) || '0', ")</p>\n                    <p>WIS: ").concat(((_action$actorStats10 = action.actorStats) === null || _action$actorStats10 === void 0 ? void 0 : _action$actorStats10.wisdom) || 'N/A', " (").concat(Math.floor((((_action$actorStats11 = action.actorStats) === null || _action$actorStats11 === void 0 ? void 0 : _action$actorStats11.wisdom) - 10) / 2) || '0', ")</p>\n                    <p>CHA: ").concat(((_action$actorStats12 = action.actorStats) === null || _action$actorStats12 === void 0 ? void 0 : _action$actorStats12.charisma) || 'N/A', " (").concat(Math.floor((((_action$actorStats13 = action.actorStats) === null || _action$actorStats13 === void 0 ? void 0 : _action$actorStats13.charisma) - 10) / 2) || '0', ")</p>\n                  </div>\n                </div>\n                ").concat(action.targetName ? "\n                  <div>\n                    <h4 class=\"font-semibold mb-2\">Target Details</h4>\n                    <div class=\"flex gap-4 mb-4\">\n                      <div class=\"text-center\">\n                        <div class=\"text-2xl font-bold text-red-500\">".concat(((_action$targetStats = action.targetStats) === null || _action$targetStats === void 0 ? void 0 : _action$targetStats.hp) || 'N/A', "</div>\n                        <div class=\"text-xs text-gray-400\">HP</div>\n                      </div>\n                      <div class=\"text-center\">\n                        <div class=\"text-2xl font-bold text-blue-500\">").concat(((_action$targetStats2 = action.targetStats) === null || _action$targetStats2 === void 0 ? void 0 : _action$targetStats2.strength) || 'N/A', "</div>\n                        <div class=\"text-xs text-gray-400\">STR</div>\n                      </div>\n                      <div class=\"text-center\">\n                        <div class=\"text-2xl font-bold text-green-500\">").concat(10 + Math.floor((((_action$targetStats3 = action.targetStats) === null || _action$targetStats3 === void 0 ? void 0 : _action$targetStats3.dexterity) - 10) / 2) || 'N/A', "</div>\n                        <div class=\"text-xs text-gray-400\">AC</div>\n                      </div>\n                    </div>\n                    <div class=\"grid grid-cols-2 gap-2 text-sm\">\n                      <p>DEX: ").concat(((_action$targetStats4 = action.targetStats) === null || _action$targetStats4 === void 0 ? void 0 : _action$targetStats4.dexterity) || 'N/A', " (").concat(Math.floor((((_action$targetStats5 = action.targetStats) === null || _action$targetStats5 === void 0 ? void 0 : _action$targetStats5.dexterity) - 10) / 2) || '0', ")</p>\n                      <p>CON: ").concat(((_action$targetStats6 = action.targetStats) === null || _action$targetStats6 === void 0 ? void 0 : _action$targetStats6.constitution) || 'N/A', " (").concat(Math.floor((((_action$targetStats7 = action.targetStats) === null || _action$targetStats7 === void 0 ? void 0 : _action$targetStats7.constitution) - 10) / 2) || '0', ")</p>\n                      <p>INT: ").concat(((_action$targetStats8 = action.targetStats) === null || _action$targetStats8 === void 0 ? void 0 : _action$targetStats8.intelligence) || 'N/A', " (").concat(Math.floor((((_action$targetStats9 = action.targetStats) === null || _action$targetStats9 === void 0 ? void 0 : _action$targetStats9.intelligence) - 10) / 2) || '0', ")</p>\n                      <p>WIS: ").concat(((_action$targetStats10 = action.targetStats) === null || _action$targetStats10 === void 0 ? void 0 : _action$targetStats10.wisdom) || 'N/A', " (").concat(Math.floor((((_action$targetStats11 = action.targetStats) === null || _action$targetStats11 === void 0 ? void 0 : _action$targetStats11.wisdom) - 10) / 2) || '0', ")</p>\n                      <p>CHA: ").concat(((_action$targetStats12 = action.targetStats) === null || _action$targetStats12 === void 0 ? void 0 : _action$targetStats12.charisma) || 'N/A', " (").concat(Math.floor((((_action$targetStats13 = action.targetStats) === null || _action$targetStats13 === void 0 ? void 0 : _action$targetStats13.charisma) - 10) / 2) || '0', ")</p>\n                    </div>\n                  </div>\n                ") : '', "\n              </div>\n              ").concat(action.action === 'move' && action.targetImageUrl ? "\n                <div class=\"mt-4\">\n                  <img src=\"".concat(action.targetImageUrl, "\" alt=\"Location\" class=\"w-full rounded-lg\">\n                </div>\n              ") : '', "\n              ").concat(action.result ? "\n                <div class=\"mt-4\">\n                  <h4 class=\"font-semibold mb-2\">\uD83D\uDCDD Result</h4>\n                  <p class=\"text-gray-300\">".concat(action.result, "</p>\n                </div>\n              ") : '', "\n              ").concat(action.memory ? "\n                <div class=\"mt-4\">\n                  <h4 class=\"font-semibold mb-2\">Memory</h4>\n                  <p class=\"text-gray-300\">".concat(action.memory, "</p>\n                </div>\n              ") : '', "\n              ").concat(action.tweet ? "\n                <div class=\"mt-4\">\n                  <h4 class=\"font-semibold mb-2\">Posted to X</h4>\n                  <p class=\"text-gray-300\">".concat(action.tweet, "</p>\n                </div>\n              ") : '', "\n            </div>\n          </div>\n        </div>\n      </div>\n    ");
    }).join('');
  } catch (error) {
    console.error('Action log loading error:', error);
    content.innerHTML = "<div class=\"text-center py-12 text-red-500\">\n      Failed to load action log: ".concat(error.message, "\n    </div>");
  }
}
async function loadLeaderboard() {
  const response = await fetch('/api/leaderboard?page=1&limit=12');
  const data = await response.json();
  content.innerHTML = data.avatars.map(avatar => "\n    <div class=\"bg-gray-800 p-4 rounded-lg flex items-center gap-4\">\n      <img\n        src=\"".concat(avatar.thumbnailUrl || avatar.imageUrl, "\"\n        alt=\"").concat(avatar.name, "\"\n        class=\"w-16 h-16 object-cover rounded-full\"\n      >\n      <div>\n        <h3 class=\"text-lg font-semibold\">").concat(avatar.name, "</h3>\n        <p class=\"text-sm text-gray-400\">Score: ").concat(avatar.score, "</p>\n        ").concat(avatar.model ? "<p class=\"text-xs text-gray-500\">".concat(avatar.model, "</p>") : '', "\n      </div>\n    </div>\n  ")).join('');
}

// Initialize
document.addEventListener('DOMContentLoaded', () => {
  loadContent();
});
