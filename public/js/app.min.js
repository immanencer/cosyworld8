"use strict";

// State management
const state = {
  wallet: null,
  activeTab: 'owned',
  avatars: [],
  loading: false
};

// DOM Elements
const content = document.getElementById('content');
const tabButtons = document.querySelectorAll('[data-tab]');

// Event Listeners
tabButtons.forEach(button => {
  button.addEventListener('click', () => {
    setActiveTab(button.dataset.tab);
  });
});

// Tab Management
function setActiveTab(tabName) {
  state.activeTab = tabName;

  // Update UI
  tabButtons.forEach(btn => {
    btn.classList.toggle('bg-blue-600', btn.dataset.tab === tabName);
    btn.classList.toggle('bg-gray-700', btn.dataset.tab !== tabName);
  });

  // Load content
  loadContent();
}

// Content Loading
async function loadContent() {
  content.innerHTML = '<div class="text-center py-12">Loading...</div>';
  state.loading = true;
  try {
    switch (state.activeTab) {
      case 'owned':
        if (!state.wallet) {
          content.innerHTML = "\n            <div class=\"text-center py-12 col-span-3\">\n              <p class=\"mb-4\">Connect your wallet to view owned avatars</p>\n              <button class=\"px-4 py-2 bg-blue-600 rounded\" onclick=\"connectWallet()\">\n                Connect Wallet\n              </button>\n            </div>";
          break;
        }
        await loadOwnedAvatars();
        break;
      case 'gallery':
        await loadGallery();
        break;
      case 'leaderboard':
        await loadLeaderboard();
        break;
      case 'tribes':
        content.innerHTML = '<div class="text-center py-12">Tribes content coming soon</div>';
        break;
    }
  } catch (error) {
    console.error('Error loading content:', error);
    content.innerHTML = '<div class="text-center py-12 text-red-500">Error loading content</div>';
  } finally {
    state.loading = false;
  }
}

// Avatar Display
function renderAvatar(avatar) {
  return "\n    <div class=\"bg-gray-800 rounded-lg p-4 hover:bg-gray-700 transition\">\n      <img \n        src=\"".concat(avatar.thumbnailUrl || avatar.imageUrl, "\" \n        alt=\"").concat(avatar.name, "\"\n        class=\"w-full aspect-square object-cover rounded-lg mb-4\"\n      >\n      <h3 class=\"text-lg font-semibold\">").concat(avatar.name, "</h3>\n      ").concat(avatar.model ? "<p class=\"text-sm text-gray-400\">".concat(avatar.model, "</p>") : '', "\n      <div class=\"mt-2\">\n        <span class=\"px-2 py-1 rounded text-xs font-bold ").concat(getTierColor(avatar.model), "\">\n          Tier ").concat(getTierFromModel(avatar.model), "\n        </span>\n      </div>\n    </div>\n  ");
}

// Utility Functions
function getTierColor(model) {
  const tier = getTierFromModel(model);
  const colors = {
    'S': 'bg-purple-600',
    'A': 'bg-blue-600',
    'B': 'bg-green-600',
    'C': 'bg-yellow-600',
    'U': 'bg-gray-600'
  };
  return colors[tier] || colors['U'];
}
function getTierFromModel(model) {
  if (!model) return 'U';
  if (model.includes('gpt-4')) return 'S';
  if (model.includes('gpt-3.5')) return 'A';
  if (model.includes('claude')) return 'B';
  return 'C';
}

// Data Loading Functions
async function loadOwnedAvatars() {
  const response = await fetch("/api/avatars/owned/".concat(state.wallet.publicKey, "?page=1&limit=12"));
  const data = await response.json();
  content.innerHTML = data.avatars.map(renderAvatar).join('');
}
async function loadGallery() {
  const response = await fetch('/api/avatars/gallery?page=1&limit=12');
  const data = await response.json();
  content.innerHTML = data.avatars.map(renderAvatar).join('');
}
async function loadLeaderboard() {
  const response = await fetch('/api/leaderboard?page=1&limit=12');
  const data = await response.json();
  content.innerHTML = data.avatars.map(avatar => "\n    <div class=\"bg-gray-800 p-4 rounded-lg flex items-center gap-4\">\n      <img\n        src=\"".concat(avatar.thumbnailUrl || avatar.imageUrl, "\"\n        alt=\"").concat(avatar.name, "\"\n        class=\"w-16 h-16 object-cover rounded-full\"\n      >\n      <div>\n        <h3 class=\"text-lg font-semibold\">").concat(avatar.name, "</h3>\n        <p class=\"text-sm text-gray-400\">Score: ").concat(avatar.score, "</p>\n        ").concat(avatar.model ? "<p class=\"text-xs text-gray-500\">".concat(avatar.model, "</p>") : '', "\n      </div>\n    </div>\n  ")).join('');
}

// Initialize
document.addEventListener('DOMContentLoaded', () => {
  loadContent();
});
