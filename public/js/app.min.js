"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _index = require("./components/ui/index.js");
var _WalletButton = require("./components/ui/WalletButton.js");
var _BurnTokenButton = require("./components/ui/BurnTokenButton.js");
var _AvatarCard = require("./components/AvatarCard.js");
var _AvatarDetailModal = require("./components/AvatarDetailModal.js");
var _CombatLog = require("./components/CombatLog.js");
var _TribesView = require("./components/TribesView.js");
var _index2 = require("./utils/index.js");
var _MarkdownContent = require("./components/utils/MarkdownContent.js");
var _jsxRuntime = require("react/jsx-runtime");
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var _React = React,
  useState = _React.useState,
  useEffect = _React.useEffect,
  useCallback = _React.useCallback;
var _ReactDOM = ReactDOM,
  createRoot = _ReactDOM.createRoot;

// Determine model rarity
var getModelRarity = function getModelRarity(modelName) {
  var modelRarities = {
    "meta-llama/llama-3.2-1b-instruct": "common",
    "meta-llama/llama-3.2-3b-instruct": "common",
    "eva-unit-01/eva-qwen-2.5-72b": "rare",
    "openai/gpt-4o": "legendary",
    "meta-llama/llama-3.1-405b-instruct": "legendary",
    "anthropic/claude-3-opus:beta": "legendary",
    "anthropic/claude-3.5-sonnet:beta": "legendary",
    "anthropic/claude-3.5-haiku:beta": "uncommon",
    "neversleep/llama-3.1-lumimaid-70b": "rare",
    "nvidia/llama-3.1-nemotron-70b-instruct": "rare",
    "meta-llama/llama-3.1-70b-instruct": "uncommon",
    "pygmalionai/mythalion-13b": "uncommon",
    "mistralai/mistral-large-2411": "uncommon",
    "qwen/qwq-32b-preview": "uncommon",
    "gryphe/mythomax-l2-13b": "common",
    "google/gemini-flash-1.5-8b": "common",
    "x-ai/grok-beta": "legendary"
  };
  return modelRarities[modelName] || "common";
};

// Map rarity to tier
var rarityToTier = {
  legendary: "S",
  rare: "A",
  uncommon: "B",
  common: "C"
};

// Get tier from model
var getTierFromModel = function getTierFromModel(model) {
  if (!model) return "U";
  var rarity = getModelRarity(model);
  return rarityToTier[rarity] || "U";
};

// Leaderboard View Component
var LeaderboardView = React.memo(function () {
  var _useState = useState([]),
    _useState2 = _slicedToArray(_useState, 2),
    leaderboard = _useState2[0],
    setLeaderboard = _useState2[1];
  var _useState3 = useState(true),
    _useState4 = _slicedToArray(_useState3, 2),
    loading = _useState4[0],
    setLoading = _useState4[1];
  useEffect(function () {
    var fetchLeaderboard = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var response, data;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return fetch("/api/leaderboard");
            case 3:
              response = _context.sent;
              _context.next = 6;
              return response.json();
            case 6:
              data = _context.sent;
              setLeaderboard(data.avatars || []);
              _context.next = 13;
              break;
            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](0);
              console.error("Error fetching leaderboard:", _context.t0);
            case 13:
              _context.prev = 13;
              setLoading(false);
              return _context.finish(13);
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[0, 10, 13, 16]]);
      }));
      return function fetchLeaderboard() {
        return _ref.apply(this, arguments);
      };
    }();
    fetchLeaderboard();
  }, []);
  if (loading) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "text-center py-4",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto"
      })
    });
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "max-w-4xl mx-auto",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("table", {
      className: "w-full bg-gray-800 rounded-lg overflow-hidden",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("thead", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("tr", {
          className: "bg-gray-700",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-left",
            children: "Rank"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-left",
            children: "Avatar"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-left",
            children: "Name"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
            className: "px-6 py-3 text-right",
            children: "Score"
          })]
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
        children: leaderboard.map(function (avatar, index) {
          return /*#__PURE__*/(0, _jsxRuntime.jsxs)("tr", {
            className: "border-t border-gray-700 hover:bg-gray-700",
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4",
              children: index + 1
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4",
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
                src: avatar.thumbnailUrl || avatar.imageUrl,
                alt: avatar.name,
                className: "w-10 h-10 rounded-full"
              })
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4",
              children: avatar.name
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              className: "px-6 py-4 text-right",
              children: avatar.score || 0
            })]
          }, avatar._id);
        })
      })]
    })
  });
});

// Tier Filter Component
var TierFilter = React.memo(function (_ref2) {
  var selectedTier = _ref2.selectedTier,
    onTierChange = _ref2.onTierChange;
  var tiers = ["All", "S", "A", "B", "C", "U"];
  var colors = {
    S: "bg-purple-600",
    A: "bg-blue-600",
    B: "bg-green-600",
    C: "bg-yellow-600",
    U: "bg-gray-600"
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "flex gap-2 justify-center mb-6",
    children: tiers.map(function (tier) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
        className: "px-3 py-1 rounded ".concat(selectedTier === tier ? tier === "All" ? "bg-white text-gray-900" : "".concat(colors[tier], " text-white") : "bg-gray-700 text-gray-300"),
        onClick: function onClick() {
          return onTierChange(tier);
        },
        children: tier
      }, tier);
    })
  });
});

// Main App Component
function App() {
  var _useState5 = useState([]),
    _useState6 = _slicedToArray(_useState5, 2),
    avatars = _useState6[0],
    setAvatars = _useState6[1];
  var _useState7 = useState(false),
    _useState8 = _slicedToArray(_useState7, 2),
    loading = _useState8[0],
    setLoading = _useState8[1];
  var _useState9 = useState(true),
    _useState10 = _slicedToArray(_useState9, 2),
    hasMore = _useState10[0],
    setHasMore = _useState10[1];
  var _useState11 = useState(null),
    _useState12 = _slicedToArray(_useState11, 2),
    lastMessageCount = _useState12[0],
    setLastMessageCount = _useState12[1];
  var _useState13 = useState(null),
    _useState14 = _slicedToArray(_useState13, 2),
    lastId = _useState14[0],
    setLastId = _useState14[1];
  var _useState15 = useState("All"),
    _useState16 = _slicedToArray(_useState15, 2),
    selectedTier = _useState16[0],
    setSelectedTier = _useState16[1];
  var _useState17 = useState("leaderboard"),
    _useState18 = _slicedToArray(_useState17, 2),
    currentView = _useState18[0],
    setCurrentView = _useState18[1];
  var _useState19 = useState(null),
    _useState20 = _slicedToArray(_useState19, 2),
    modalAvatar = _useState20[0],
    setModalAvatar = _useState20[1];
  var _useState21 = useState(null),
    _useState22 = _slicedToArray(_useState21, 2),
    wallet = _useState22[0],
    setWallet = _useState22[1];
  var loadAvatars = useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    var isInitial,
      url,
      res,
      data,
      _args2 = arguments;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          isInitial = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : false;
          if (!(loading || !hasMore && !isInitial)) {
            _context2.next = 3;
            break;
          }
          return _context2.abrupt("return");
        case 3:
          setLoading(true);
          _context2.prev = 4;
          url = new URL("/api/leaderboard", window.location.origin);
          url.searchParams.set("limit", "24");
          if (selectedTier !== "All") {
            url.searchParams.set("tier", selectedTier);
          }
          if (!isInitial && lastMessageCount !== null && lastId) {
            url.searchParams.set("lastMessageCount", lastMessageCount);
            url.searchParams.set("lastId", lastId);
          }
          _context2.next = 11;
          return fetch(url);
        case 11:
          res = _context2.sent;
          if (res.ok) {
            _context2.next = 14;
            break;
          }
          throw new Error("HTTP error! status: ".concat(res.status));
        case 14:
          _context2.next = 16;
          return res.json();
        case 16:
          data = _context2.sent;
          if (isInitial) {
            setAvatars(data.avatars || []);
          } else {
            setAvatars(function (prev) {
              return [].concat(_toConsumableArray(prev), _toConsumableArray(data.avatars || []));
            });
          }
          setHasMore(data.hasMore);
          setLastMessageCount(data.lastMessageCount);
          setLastId(data.lastId);
          _context2.next = 27;
          break;
        case 23:
          _context2.prev = 23;
          _context2.t0 = _context2["catch"](4);
          console.error("Error loading avatars:", _context2.t0);
          setHasMore(false);
        case 27:
          _context2.prev = 27;
          setLoading(false);
          return _context2.finish(27);
        case 30:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[4, 23, 27, 30]]);
  })), [loading, hasMore, selectedTier, lastMessageCount, lastId]);
  useEffect(function () {
    loadAvatars(true);
  }, [loadAvatars]);
  useEffect(function () {
    var handleScroll = function handleScroll() {
      if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 1000 && !loading && hasMore) {
        loadAvatars();
      }
    };
    window.addEventListener("scroll", handleScroll);
    return function () {
      return window.removeEventListener("scroll", handleScroll);
    };
  }, [loading, hasMore, loadAvatars]);
  useEffect(function () {
    setLastMessageCount(null);
    setLastId(null);
    setHasMore(true);
    setAvatars([]);
    loadAvatars(true);
  }, [selectedTier, loadAvatars]);

  // Handler for avatar selection from any view
  var handleAvatarSelect = useCallback(function (avatar) {
    // Fetch full avatar details if needed
    fetch("/api/avatars/".concat(avatar._id)).then(function (res) {
      return res.json();
    }).then(function (data) {
      return setModalAvatar(data);
    })["catch"](function (err) {
      console.error("Error fetching avatar details:", err);
      setModalAvatar(avatar); // Fallback to basic avatar data
    });
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "container mx-auto px-4 py-8",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_WalletButton.WalletButton, {
      onWalletChange: setWallet
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
      className: "text-4xl font-bold mb-8 text-center",
      children: "Avatar Dashboard"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_index.ViewToggle, {
      currentView: currentView,
      onViewChange: setCurrentView
    }), currentView === "collection" ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(TierFilter, {
        selectedTier: selectedTier,
        onTierChange: setSelectedTier
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_AvatarCard.AvatarSearch, {
        onSelect: handleAvatarSelect
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "grid gap-4 grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 mt-4",
        children: avatars.map(function (avatar) {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_AvatarCard.AvatarCard, {
            avatar: avatar,
            onSelect: handleAvatarSelect
          }, avatar._id);
        })
      }), loading && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "text-center py-4",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto"
        })
      }), modalAvatar && /*#__PURE__*/(0, _jsxRuntime.jsx)(_AvatarDetailModal.AvatarDetailModal, {
        avatar: modalAvatar,
        onClose: function onClose() {
          return setModalAvatar(null);
        },
        wallet: wallet
      })]
    }) : currentView === "leaderboard" ? /*#__PURE__*/(0, _jsxRuntime.jsx)(LeaderboardView, {}) : currentView === "combat" ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_CombatLog.CombatLog, {
      onAvatarSelect: handleAvatarSelect
    }) : currentView === "tribes" ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_TribesView.TribesView, {
      onAvatarSelect: handleAvatarSelect
    }) : null, wallet && /*#__PURE__*/(0, _jsxRuntime.jsx)(_BurnTokenButton.BurnTokenButton, {
      wallet: wallet,
      onSuccess: function onSuccess() {
        /* Handle success */
      }
    })]
  });
}

// Initialize app
var rootElement = document.getElementById("root");
if (rootElement) {
  var root = createRoot(rootElement);
  root.render(/*#__PURE__*/(0, _jsxRuntime.jsx)(React.StrictMode, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(App, {})
  }));
}
