const config={sizes:{small:"w-16 h-16",medium:"w-24 h-24",large:"w-32 h-32",xlarge:"w-48 h-48"}};function renderAvatarImage({imageUrl:e,name:n="Unknown",size:t="medium",className:s=""}){const a=config.sizes[t]||config.sizes.medium,r=n||"Unknown",l=r.charAt(0).toUpperCase();return e?`\n    <div class="avatar-image-container ${s}">\n      <img \n        src="${e}" \n        alt="${r}" \n        class="avatar-image ${a} object-cover rounded-full border-2 border-gray-600"\n        onerror="this.onerror=null; this.src='data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'100\\' height=\\'100\\' viewBox=\\'0 0 100 100\\'%3E%3Crect fill=\\'%23333\\' width=\\'100\\' height=\\'100\\'/%3E%3Ctext fill=\\'%23FFF\\' x=\\'50\\' y=\\'50\\' font-size=\\'50\\' text-anchor=\\'middle\\' dominant-baseline=\\'middle\\'%3E${l}%3C/text%3E%3C/svg%3E';"\n      >\n    </div>\n  `:`\n      <div class="avatar-image ${a} ${s} bg-gray-700 rounded-full flex items-center justify-center text-2xl font-bold text-white">\n        ${l}\n      </div>\n    `}function renderAvatarStats({stats:e={},className:n=""}){const t=e.hp||0,s=e.strength||10,a=e.dexterity||10,r=e.constitution||10,l=e.intelligence||10,i=e.wisdom||10,d=e.charisma||10,o=e=>Math.floor((e-10)/2),c=o(s),v=o(a),g=o(r),p=o(l),m=o(i),x=o(d);return`\n    <div class="avatar-stats ${n} bg-gray-800 p-4 rounded-lg">\n      <div class="flex justify-between items-center mb-3 border-b border-gray-700 pb-3">\n        <h3 class="text-lg font-bold">Character Stats</h3>\n      </div>\n\n      <div class="grid grid-cols-3 gap-4 mb-4">\n        <div class="text-center">\n          <div class="text-2xl font-bold text-red-500">${t}</div>\n          <div class="text-xs text-gray-400">HP</div>\n        </div>\n        <div class="text-center">\n          <div class="text-2xl font-bold text-blue-500">${10+v}</div>\n          <div class="text-xs text-gray-400">AC</div>\n        </div>\n        <div class="text-center">\n          <div class="text-2xl font-bold text-green-500">${v}</div>\n          <div class="text-xs text-gray-400">Initiative</div>\n        </div>\n      </div>\n\n      <div class="grid grid-cols-2 gap-2 text-sm">\n        <div class="flex justify-between items-center">\n          <span>STR</span>\n          <span class="font-semibold">${s} (${c>=0?"+"+c:c})</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span>DEX</span>\n          <span class="font-semibold">${a} (${v>=0?"+"+v:v})</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span>CON</span>\n          <span class="font-semibold">${r} (${g>=0?"+"+g:g})</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span>INT</span>\n          <span class="font-semibold">${l} (${p>=0?"+"+p:p})</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span>WIS</span>\n          <span class="font-semibold">${i} (${m>=0?"+"+m:m})</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span>CHA</span>\n          <span class="font-semibold">${d} (${x>=0?"+"+x:x})</span>\n        </div>\n      </div>\n    </div>\n  `}function renderAvatarSkills({skills:e=[],className:n=""}){return e&&e.length?`\n    <div class="avatar-skills ${n} bg-gray-800 p-4 rounded-lg">\n      <h3 class="text-lg font-bold mb-2">Skills</h3>\n      <div class="flex flex-wrap gap-2">\n        ${e.map((e=>`\n          <span class="bg-gray-700 text-gray-200 px-2 py-1 rounded text-xs">\n            ${e}\n          </span>\n        `)).join("")}\n      </div>\n    </div>\n  `:`\n      <div class="avatar-skills ${n} bg-gray-800 p-4 rounded-lg">\n        <h3 class="text-lg font-bold mb-2">Skills</h3>\n        <p class="text-gray-400">No skills available</p>\n      </div>\n    `}function renderAvatarDescription({description:e="",className:n=""}){return`\n    <div class="avatar-description ${n} bg-gray-800 p-4 rounded-lg">\n      <h3 class="text-lg font-bold mb-2">Description</h3>\n      <p class="text-gray-200">${e||"No description available."}</p>\n    </div>\n  `}function renderAvatarDetails(e,n={}){const{isEditable:t=!1,onEdit:s=null,className:a="",claimInfo:r=null}=n,{id:l="",name:i="Unknown Avatar",imageUrl:d="",level:o=1,experience:c=0,skills:v=[],description:g="",stats:p={},lastActive:m=null,templateId:x,collectionId:u}=e,b=m?new Date(m).toLocaleDateString():"Unknown",f=e=>e?e.includes("gpt-4")?"S":e.includes("gpt-3.5")?"A":e.includes("claude")?"B":"C":"U",h=(e=>{const n={S:"bg-purple-600",A:"bg-blue-600",B:"bg-green-600",C:"bg-yellow-600",U:"bg-gray-600"};return n[f(e)]||n.U})(e.model),$=f(e.model),y=r?.claimed||!1,w=r?.claimedBy||"",A=r?.isClaimedByCurrentWallet||!1;return`\n    <div class="avatar-details-container ${a} bg-gray-900 rounded-lg overflow-hidden">\n      \x3c!-- Header with avatar image, name, and tier --\x3e\n      <div class="flex flex-col md:flex-row items-center p-4 bg-gray-800 border-b border-gray-700">\n        <div class="flex-shrink-0 mb-4 md:mb-0 relative">\n          ${renderAvatarImage({imageUrl:d,name:i,size:"large"})}\n          ${y?'<div class="absolute -top-2 -right-2 bg-green-500 rounded-full w-8 h-8 flex items-center justify-center text-lg shadow-md">✓</div>':""}\n        </div>\n\n        <div class="md:ml-6 flex-grow text-center md:text-left">\n          <div class="flex flex-col md:flex-row md:items-center justify-between">\n            <h2 class="text-3xl font-bold">${i}</h2>\n\n            <div class="flex items-center mt-2 md:mt-0">\n              <span class="px-2 py-1 rounded text-xs font-bold ${h}">\n                Tier ${$}\n              </span>\n\n              ${t&&s?`\n                <button \n                  class="ml-3 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors"\n                  onclick="(${s.toString()})('${l}')"\n                >\n                  Edit\n                </button>\n              `:""}\n            </div>\n          </div>\n\n          <div class="mt-2 text-gray-400 text-sm">\n            <span>Level ${o}</span>\n            <span class="mx-2">•</span>\n            <span>XP: ${c}</span>\n            ${m?`<span class="mx-2">•</span><span>Last active: ${b}</span>`:""}\n          </div>\n          \n          \x3c!-- Claim status information at the top --\x3e\n          ${y?`\n            <div class="mt-3 py-2 px-3 bg-gray-700 rounded-md inline-flex items-center">\n              <span class="text-green-400 mr-2">✓</span>\n              <span>Claimed by ${shortenAddress?shortenAddress(w):w}</span>\n              ${A?'<span class="ml-2 text-blue-400">(You)</span>':""}\n            </div>\n          `:""}\n        </div>\n      </div>\n\n      \x3c!-- Content area --\x3e\n      <div class="p-6">\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">\n          \x3c!-- Stats section --\x3e\n          ${renderAvatarStats({stats:p})}\n\n          \x3c!-- Skills section --\x3e\n          ${renderAvatarSkills({skills:v})}\n        </div>\n\n        \x3c!-- Description section --\x3e\n        ${renderAvatarDescription({description:g})}\n      </div>\n    </div>\n  `}function renderAvatarCard(e={},n=null,t=!1,s=""){const a=e?._id||"",r=e?.name||"Unknown",l=e?.imageUrl||"",i=e?.model||"",d=e=>e?e.includes("gpt-4")?"S":e.includes("gpt-3.5")?"A":e.includes("claude")?"B":"C":"U";return`\n    <div class="avatar-card bg-gray-800 p-3 rounded-lg hover:bg-gray-700 transition-colors cursor-pointer ${t?"border-l-2 border-green-500":""}" ${n?`onclick="${n}('${a}')"`:""}>\n      <div class="flex items-center gap-3">\n        <div class="relative">\n          ${renderAvatarImage({imageUrl:l,name:r,size:"small"})}\n          ${t?`<div class="absolute -top-1 -right-1 bg-green-500 rounded-full w-5 h-5 flex items-center justify-center text-xs" title="Claimed by ${s}">✓</div>`:""}\n        </div>\n\n        <div class="flex-1 min-w-0">\n          <h3 class="text-lg font-semibold truncate">${r}</h3>\n\n          <div class="flex items-center gap-2 mt-1">\n            <span class="px-2 py-0.5 rounded text-xs font-bold ${(e=>{const n={S:"bg-purple-600",A:"bg-blue-600",B:"bg-green-600",C:"bg-yellow-600",U:"bg-gray-600"};return n[d(e)]||n.U})(i)}">\n              Tier ${d(i)}\n            </span>\n            ${e.score?`<span class="text-xs text-gray-400">Score: ${e.score}</span>`:""}\n            ${t?'<span class="text-xs text-green-400">Claimed</span>':""}\n          </div>\n        </div>\n      </div>\n    </div>\n  `}function renderLeaderboardCard(e={},n=!1){const t=e?.name||"Unknown",s=e?.imageUrl||"",a=e?.model||"",r=e?.score||0,l=e=>e?e.includes("gpt-4")?"S":e.includes("gpt-3.5")?"A":e.includes("claude")?"B":"C":"U";return`\n    <div class="avatar-card bg-gray-800 p-3 rounded-lg hover:bg-gray-700 transition-colors cursor-pointer ${n?"border-l-2 border-green-500":""}">\n      <div class="flex gap-3 items-center">\n        <div class="relative">\n          ${renderAvatarImage({imageUrl:s,name:t,size:"small"})}\n          ${n?'<div class="absolute -top-1 -right-1 bg-green-500 rounded-full w-5 h-5 flex items-center justify-center text-xs">✓</div>':""}\n        </div>\n\n        <div class="flex-1 min-w-0">\n          <h3 class="text-sm font-semibold truncate">${t}</h3>\n          <p class="text-xs text-gray-400">Score: ${r}</p>\n\n          <div class="flex items-center gap-2 mt-1">\n            <span class="px-1.5 py-0.5 rounded text-xs font-bold ${(e=>{const n={S:"bg-purple-600",A:"bg-blue-600",B:"bg-green-600",C:"bg-yellow-600",U:"bg-gray-600"};return n[l(e)]||n.U})(a)}">\n              Tier ${l(a)}\n            </span>\n            ${n?'<span class="text-xs text-green-400">Claimed</span>':""}\n          </div>\n        </div>\n      </div>\n    </div>\n  `}function generateAvatarDetailModal(e){if(!e)return"";const{_id:n,name:t,emoji:s,description:a,imageUrl:r,model:l,createdAt:i,messageCount:d=0,actionCount:o=0,narrationCount:c=0,stats:v={},templateId:g,collectionId:p}=e;return`\n    <div id="avatar-detail-modal" class="modal">\n      <div class="modal-content bg-surface-800 p-6 rounded-lg shadow-lg">\n        <div class="flex items-center justify-between mb-4">\n          <h2 class="text-2xl font-bold">${t}</h2>\n          <button id="close-avatar-detail" class="text-gray-400 hover:text-gray-300">\n            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">\n              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />\n            </svg>\n          </button>\n        </div>\n        <div class="flex items-center mb-4">\n          ${renderAvatarImage({imageUrl:r,name:t,size:"large"})}\n          <div class="ml-4">\n            <p class="text-sm text-gray-400">${a}</p>\n          </div>\n        </div>\n        <div class="flex flex-col gap-2">\n          <div class="flex justify-between items-center">\n            <span class="text-gray-400">Created At:</span>\n            <span class="text-gray-300">${i}</span>\n          </div>\n          <div class="flex justify-between items-center">\n            <span class="text-gray-400">Messages:</span>\n            <span class="text-gray-300">${d}</span>\n          </div>\n          <div class="flex justify-between items-center">\n            <span class="text-gray-400">Actions:</span>\n            <span class="text-gray-300">${o}</span>\n          </div>\n          <div class="flex justify-between items-center">\n            <span class="text-gray-400">Narrations:</span>\n            <span class="text-gray-300">${c}</span>\n          </div>\n        </div>\n\n        <div class="flex space-x-2 mt-6">\n          <button id="close-avatar-detail" class="px-4 py-2 bg-surface-700 hover:bg-surface-600 rounded-lg transition">\n            Close\n          </button>\n          <button id="claim-btn" class="px-4 py-2 bg-primary-600 hover:bg-primary-500 rounded-lg transition flex items-center justify-center">\n            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">\n              <path stroke-linecap="round" stroke-linejoin="round" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />\n              <path stroke-linecap="round" stroke-linejoin="round" d="M9 9.563C9 9.252 9.252 9 9.563 9h4.874c.311 0 .563.252.563.563v4.874c0 .311-.252.563-.563.563H9.564A.562.562 0 019 14.437V9.564z" />\n            </svg>\n            Claim\n          </button>\n          ${e.templateId&&e.collectionId?`\n          <a href="/checkout.html?templateId=${e.templateId}&collectionId=${e.collectionId}" \n             class="px-4 py-2 bg-green-600 hover:bg-green-500 rounded-lg transition flex items-center justify-center">\n            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">\n              <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z" />\n            </svg>\n            Collect\n          </a>\n          `:""}\n        </div>\n      </div>\n    </div>\n  `}function shortenAddress(e){return"string"!=typeof e?"":e.slice(0,6)+"..."+e.slice(-4)}window.AvatarDetails={renderAvatarDetails,renderAvatarCard,renderLeaderboardCard,renderAvatarImage,renderAvatarStats,renderAvatarSkills,renderAvatarDescription,generateAvatarDetailModal,shortenAddress};