function showMessage(e,t){const i=document.getElementById("settings-message");i&&(i.textContent=e,i.classList.remove("hidden","text-green-500","text-red-500"),i.classList.add(`text-${"success"===t?"green":"red"}-500`),i.classList.remove("hidden"),setTimeout((()=>{i.classList.add("hidden")}),5e3))}async function initGuildDiscovery(){const e=document.getElementById("guild-selector");if(e)try{const t=await fetch("/api/discord/guilds");if(!t.ok)throw new Error(`HTTP error ${t.status}`);const i=await t.json();e.innerHTML='<option value="" disabled selected>Please select a Discord server to configure</option>',i.forEach((t=>{const i=document.createElement("option");i.value=t.id,i.textContent=t.name,e.appendChild(i)})),e.addEventListener("change",handleGuildSelection),await checkForDetectedServers()}catch(e){console.error("Error fetching available guilds:",e),showMessage("Failed to fetch available Discord servers. Please try again later.","error")}}async function checkForDetectedServers(){try{const e=await fetch("/api/audit-logs?type=guild_access&limit=50");if(!e.ok)return void console.error("Failed to fetch audit logs");const t=await e.json();console.log("Retrieved audit logs:",t);const i=await fetch("/api/guilds");if(!i.ok)return void console.error("Failed to fetch guild configs");const s=await i.json(),n=new Set(s.map((e=>e.guildId))),d=document.getElementById("detected-guilds-container");if(!d)return void console.error("Detected guilds container not found");const o=new Map;if(t.forEach((e=>{if("string"==typeof e.message){const i=e.message.match(/Guild\s+([^(]+)\s+\((\d+)\)\s+is\s+not\s+whitelisted/i),s=e.message.match(/Retrieved guild config for (\d+) from database: whitelisted=false/i);if(i&&i[1]&&i[2]){const e=i[1].trim(),t=i[2];n.has(t)||o.has(t)||o.set(t,{name:e,id:t})}else if(s&&s[1]){const e=s[1];if(!n.has(e)&&!o.has(e)){const i=t.find((t=>t.message&&t.message.includes(e)&&t.message.match(/Guild\s+([^(]+)\s+\((\d+)\)/i))),s=i?i.message.match(/Guild\s+([^(]+)\s+\((\d+)\)/i)[1].trim():`Server ${e}`;o.set(e,{name:s,id:e})}}}})),o.size>0){const e=document.getElementById("detected-guilds-section");e&&e.classList.remove("hidden"),d.innerHTML="";for(const e of o.values()){const t=document.createElement("div");t.classList.add("bg-white","border","border-yellow-300","shadow","rounded-lg","p-4","mb-3"),t.innerHTML=`\n          <div class="flex justify-between items-center">\n            <div>\n              <h3 class="text-lg font-semibold">${e.name}</h3>\n              <p class="text-sm text-gray-500">ID: ${e.id}</p>\n            </div>\n            <button\n              class="whitelist-btn bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded"\n              data-guild-id="${e.id}"\n              data-guild-name="${e.name}"\n            >\n              Whitelist\n            </button>\n          </div>\n        `;const i=t.querySelector(".whitelist-btn");i&&i.addEventListener("click",(e=>{e.preventDefault(),whitelistDetectedGuild(i.getAttribute("data-guild-id"),i.getAttribute("data-guild-name"))})),d.appendChild(t)}}else{const e=document.getElementById("detected-guilds-section");e&&e.classList.add("hidden")}}catch(e){console.error("Error checking for detected servers:",e)}}async function whitelistDetectedGuild(e,t){try{const i={guildId:e,guildName:t,whitelisted:!0,features:{breeding:!1,combat:!1,itemCreation:!1},prompts:{introduction:"",summon:"",attack:"",defend:"",breed:""},rateLimit:{messages:5,interval:6e4},summonEmoji:"‚ú®",toolEmojis:{summon:"üîÆ",breed:"üèπ",attack:"‚öîÔ∏è",defend:"üõ°Ô∏è"}},s=await fetch("/api/guilds",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)});if(!s.ok)throw new Error(`Failed to save guild configuration: ${s.status}`);showMessage(`Server "${t}" has been whitelisted successfully!`,"success"),window.guildSettingsManager?(await window.guildSettingsManager.loadGuildConfigs(),window.guildSettingsManager.initializeGuildSelector()):window.location.reload()}catch(e){console.error("Error whitelisting detected guild:",e),showMessage(`Failed to whitelist server: ${e.message}`,"error")}}function initializeAdminPanel(){initGuildDiscovery(),renderDetectedGuilds(),renderAdminPanel()}function renderAdminPanel(){const e=document.getElementById("main-content");e&&(e.innerHTML='\n    <div class="container mx-auto px-4 py-8">\n      <h1 class="text-3xl font-bold mb-6">Admin Dashboard</h1>\n\n      <div class="bg-white shadow-md rounded-lg p-6 mb-8">\n        <h2 class="text-2xl font-semibold mb-4">Configure Discord Server Settings</h2>\n        <p class="text-gray-600 mb-6">Manage settings for each connected Discord server</p>\n\n        <div id="settings-message" class="hidden"></div>\n\n        <div class="mb-6">\n          <h3 class="text-xl font-semibold mb-3">Discord Servers</h3>\n          <div id="guild-cards-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4">\n            \x3c!-- Guild cards will be rendered here --\x3e\n          </div>\n          <p class="text-sm text-gray-500 mb-4">Note: New servers will inherit settings from the first configured server as a template</p>\n          <button id="add-new-guild-button" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded flex items-center">\n            <svg class="w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">\n              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd" />\n            </svg>\n            Add New Server Configuration\n          </button>\n        </div>\n\n        \x3c!-- Detected servers section --\x3e\n        <div id="detected-guilds-section" class="mb-6 hidden">\n          <h3 class="text-xl font-semibold mb-3">Detected Servers</h3>\n          <p class="text-sm text-gray-600 mb-4">The following Discord servers have attempted to interact with the bot but are not yet whitelisted:</p>\n          <div id="detected-guilds-container" class="space-y-3">\n            \x3c!-- Detected guild cards will be rendered here --\x3e\n          </div>\n        </div>\n\n        <div id="no-server-selected" class="text-center p-8 border border-dashed border-gray-300 rounded-lg">\n          <svg class="w-16 h-16 mx-auto text-gray-400 mb-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />\n          </svg>\n          <p class="text-gray-500 mb-2">Please select a Discord server to configure</p>\n          <p class="text-sm text-gray-400">Note: New servers will inherit settings from the first configured server as a template</p>\n        </div>\n\n        \x3c!-- Guild settings form is defined in guild-settings.html --\x3e\n      </div>\n    </div>\n  ')}document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("admin-container")&&(initializeAdminPanel(),setTimeout((()=>{checkForDetectedServers()}),1e3))}));