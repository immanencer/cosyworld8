const state={wallet:null,avatar:null,claimed:!1,claimedBy:null,xStatus:{linked:!1,authorized:!1}};function initializeWalletUI(){const t=document.querySelector(".wallet-container");if(t){t.innerHTML='\n      <button id="wallet-connect-btn" class="px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded transition">\n        Connect Wallet\n      </button>\n    ';const e=document.getElementById("wallet-connect-btn");e&&e.addEventListener("click",connectWallet)}}function setupEventListeners(){const t=document.getElementById("flip-to-back"),e=document.getElementById("flip-to-front"),a=document.getElementById("avatar-card");t&&e&&a&&(t.addEventListener("click",(()=>{a.classList.add("flipped")})),e.addEventListener("click",(()=>{a.classList.remove("flipped")})));const n=document.getElementById("claim-with-phantom");n&&n.addEventListener("click",claimWithPhantom);const o=document.getElementById("link-to-x");o&&o.addEventListener("click",linkToX)}async function loadAvatarDetails(t){const e=document.getElementById("avatar-details-container").querySelector("h1");try{const a=await fetch(`/api/claims/status/${t}`),n=await a.json();a.ok&&(state.claimed=n.claimed||!1,state.claimedBy=n.claimedBy||null,console.log("Claim status:",state.claimed,state.claimedBy));const o=await fetch(`/api/avatars/${t}`);if(!o.ok)throw new Error(`Failed to fetch avatar details (${o.status})`);const s=await o.json();if(state.avatar=s,e&&e.classList.add("hidden"),state.claimed)try{const e=await fetch(`/api/xauth/status/${t}`),a=await e.json();e.ok&&(state.xStatus.authorized=a.authorized||!1,state.xStatus.requiresReauth=a.requiresReauth||!1)}catch(t){console.warn("Failed to fetch X auth status:",t)}renderAvatarDetails(s),loadSocialPosts(t),updateActionButtons()}catch(t){throw console.error("Error loading avatar:",t),showToast("Failed to load avatar details","error"),t}}async function loadSocialPosts(t){const e=document.getElementById("social-posts");if(e)try{const a=await fetch(`/api/avatars/${t}/social-posts`);if(!a.ok)throw new Error("Failed to fetch social posts");const n=await a.json(),o=Array.isArray(n)?n:n.posts||[];if(0===o.length)return void(e.innerHTML='<p class="text-gray-400 text-center py-4">No social posts available.</p>');e.innerHTML=o.map((t=>`\n      <div class="mb-3 p-3 bg-gray-800 rounded-lg">\n        <p class="text-gray-200">${t.content}</p>\n        <div class="mt-1 flex justify-between items-center">\n          <span class="text-xs text-gray-500">${formatDate(t.timestamp||t.createdAt)}</span>\n          ${t.postedToX?'<span class="text-xs text-blue-400 flex items-center">\n              <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>\n              </svg>\n              Posted to X\n            </span>':""}\n        </div>\n      </div>\n    `)).join("")}catch(t){console.error("Error loading social posts:",t),e.innerHTML='<p class="text-red-500 text-center py-4">Failed to load social posts.</p>'}}function renderAvatarDetails(t){if(!t)return;const e=document.getElementById("avatar-image");e&&(e.src=t.imageUrl||"/images/default-avatar.png",e.onerror=function(){this.onerror=null;const e=(t.name||"A").charAt(0).toUpperCase();this.src=`data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Crect fill='%23333' width='100' height='100'/%3E%3Ctext fill='%23FFF' x='50' y='50' font-size='50' text-anchor='middle' dominant-baseline='middle'%3E${e}%3C/text%3E%3C/svg%3E`});const a=document.getElementById("claimed-badge");a&&(state.claimed?a.classList.remove("hidden"):a.classList.add("hidden"));const n=document.getElementById("tier-badge");if(n){const e=getTier(t.model),a=getTierColor(e);n.className=`px-2 py-1 text-xs font-bold rounded ${a}`,n.textContent=`Tier ${e}`}document.getElementById("avatar-name").textContent=`${t.name||"Unknown"} ${t.emoji||""}`,document.getElementById("avatar-meta").textContent=t.createdAt?`Created: ${formatDate(t.createdAt)}`:"";const o=t.stats||{};document.getElementById("avatar-hp").textContent=o.hp||"0",document.getElementById("avatar-ac").textContent=o.ac||"0",document.getElementById("avatar-init").textContent=o.initiative||"0",document.getElementById("avatar-personality").textContent=t.personality||"No personality information available.",document.getElementById("avatar-description").textContent=t.description||"No description available."}function updateActionButtons(){const t=document.getElementById("claim-with-phantom"),e=document.getElementById("link-to-x"),a=document.getElementById("link-x-text");t&&(state.claimed?t.classList.add("hidden"):t.classList.remove("hidden")),e&&a&&(state.claimed?(e.classList.remove("hidden"),state.xStatus.authorized?a.textContent="Reconnect to X":a.textContent="Link to X"):e.classList.add("hidden"))}function formatDate(t){return t?new Date(t).toLocaleDateString(void 0,{year:"numeric",month:"short",day:"numeric"}):"Unknown"}function getTier(t){return t?t.includes("gpt-4")?"S":t.includes("gpt-3.5")?"A":t.includes("claude")?"B":"C":"C"}function getTierColor(t){switch(t){case"S":return"bg-purple-600";case"A":return"bg-blue-600";case"B":return"bg-green-600";case"C":return"bg-yellow-600";default:return"bg-gray-600"}}async function connectWallet(){try{const t=window?.phantom?.solana;if(!t)return showToast("Please install Phantom wallet","warning"),void window.open("https://phantom.app/","_blank");const e=await t.connect();e?.publicKey&&(state.wallet={publicKey:e.publicKey.toString(),isConnected:!0},updateWalletUI(),showToast(`Wallet connected: ${shortenAddress(state.wallet.publicKey)}`,"success"),state.claimed&&state.avatar&&state.avatar.claimedBy&&state.avatar.claimedBy.toLowerCase()===state.wallet.publicKey.toLowerCase()&&updateActionButtons())}catch(t){console.error("Wallet connection error:",t),showToast(`Wallet connection failed: ${t.message}`,"error")}}function disconnectWallet(){try{const t=window?.phantom?.solana;t&&t.disconnect&&t.disconnect(),state.wallet=null,updateWalletUI(),showToast("Wallet disconnected","info")}catch(t){console.error("Wallet disconnect error:",t),showToast(`Error disconnecting wallet: ${t.message}`,"error")}}function updateWalletUI(){const t=document.querySelector(".wallet-container");if(t)if(state.wallet&&state.wallet.publicKey){t.innerHTML=`\n      <div class="flex items-center space-x-2">\n        <span class="text-green-400 text-sm">‚óè</span>\n        <span class="text-gray-200">${shortenAddress(state.wallet.publicKey)}</span>\n        <button id="wallet-disconnect-btn" class="text-gray-400 hover:text-white">\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />\n          </svg>\n        </button>\n      </div>\n    `;const e=document.getElementById("wallet-disconnect-btn");e&&e.addEventListener("click",disconnectWallet)}else{t.innerHTML='\n      <button id="wallet-connect-btn" class="px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded transition">\n        Connect Wallet\n      </button>\n    ';const e=document.getElementById("wallet-connect-btn");e&&e.addEventListener("click",connectWallet)}}async function claimWithPhantom(){if(state.wallet||(showToast("Please connect your wallet first","warning"),await connectWallet(),state.wallet))if(state.avatar&&state.avatar._id)try{const t=document.getElementById("claim-with-phantom");t&&(t.disabled=!0,t.innerHTML='\n        <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">\n          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>\n          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>\n        </svg>\n        Claiming...\n      ');const e=`I am claiming avatar ${state.avatar._id}`,a=(new TextEncoder).encode(e),n=await window.phantom.solana.signMessage(a,"utf8"),o=Array.from(n.signature).map((t=>t.toString(16).padStart(2,"0"))).join(""),s=await fetch("/api/claims/claim",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({avatarId:state.avatar._id,walletAddress:state.wallet.publicKey,signature:o,message:e})}),i=await s.json();if(!s.ok)throw new Error(i.error||"Claim failed");state.claimed=!0,updateActionButtons(),document.getElementById("claimed-badge").classList.remove("hidden"),showToast("Avatar claimed successfully!","success")}catch(t){console.error("Error claiming avatar:",t),showToast(`Failed to claim avatar: ${t.message}`,"error")}finally{const t=document.getElementById("claim-with-phantom");t&&(t.disabled=!1,t.innerHTML='\n        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n          <path d="M20.6 12.25c0-.5-.4-.9-.9-.9h-1.8c-.5 0-.9.4-.9.9v1.8c0 .5.4.9.9.9h1.8c.5 0 .9-.4.9-.9v-1.8zm-10.1-.9h1.8c.5 0 .9.4.9.9v1.8c0 .5-.4.9-.9.9h-1.8c-.5 0-.9-.4-.9-.9v-1.8c0-.5.4-.9.9-.9zm-5.5 0h1.8c.5 0 .9.4.9.9v1.8c0 .5-.4.9-.9.9H5c-.5 0-.9-.4-.9-.9v-1.8c0-.5.4-.9.9-.9z"/>\n        </svg>\n        Claim with Phantom\n      ')}else showToast("No avatar to claim","error")}async function linkToX(){if(state.avatar&&state.avatar._id)if(state.claimed)if(state.wallet&&state.avatar.claimedBy.toLowerCase()===state.wallet.publicKey.toLowerCase())try{const t=document.getElementById("link-to-x");t&&(t.disabled=!0,document.getElementById("link-x-text").textContent,document.getElementById("link-x-text").textContent="Initiating...");const e=await fetch(`/api/xauth/auth-url?avatarId=${state.avatar._id}`);if(!e.ok){const t=await e.json();throw new Error(t.error||`Error ${e.status}`)}const a=await e.json();if(!a.url)throw new Error("No authentication URL returned");const n=600,o=650,s=window.screen.width/2-n/2,i=window.screen.height/2-o/2,r=window.open(a.url,"xauth_popup",`width=${n},height=${o},top=${i},left=${s},resizable=yes,scrollbars=yes`);if(!r||r.closed||void 0===r.closed)throw new Error("Popup was blocked. Please allow popups for this site.");window.addEventListener("message",(function t(e){"X_AUTH_SUCCESS"===e.data.type?(showToast("X account linked successfully!","success"),window.removeEventListener("message",t),state.xStatus.authorized=!0,document.getElementById("link-x-text").textContent="Reconnect to X"):"X_AUTH_ERROR"===e.data.type&&(showToast(`X authorization failed: ${e.data.error||"Unknown error"}`,"error"),window.removeEventListener("message",t))})),showToast("X authorization initiated. Please complete the process in the popup.","info")}catch(t){console.error("Error initiating X auth:",t),showToast(`Error linking to X: ${t.message}`,"error")}finally{const t=document.getElementById("link-to-x");t&&(t.disabled=!1,document.getElementById("link-x-text").textContent=state.xStatus.authorized?"Reconnect to X":"Link to X")}else showToast("You must be the owner of this avatar to link with X","warning");else showToast("Avatar must be claimed before linking to X","warning");else showToast("No avatar details found","error")}function shortenAddress(t){return t&&"string"==typeof t?t.slice(0,6)+"..."+t.slice(-4):""}function showToast(t,e="info"){const a=document.getElementById("toast-container");if(!a)return;const n=document.createElement("div");n.className="px-4 py-2 rounded-lg shadow-lg max-w-xs text-white \n    "+("error"===e?"bg-red-600":"success"===e?"bg-green-600":"warning"===e?"bg-yellow-600":"bg-blue-600"),n.textContent=t,a.appendChild(n),setTimeout((()=>{n.classList.add("opacity-0","transition-opacity","duration-500"),setTimeout((()=>{a.removeChild(n)}),500)}),3e3)}document.addEventListener("DOMContentLoaded",(async()=>{initializeWalletUI(),setupEventListeners();const t=new URLSearchParams(window.location.search).get("id");if(!t)return showToast("Avatar ID is missing in the query string","error"),void(document.getElementById("avatar-details-container").innerHTML='<p class="text-red-500 text-center p-8">Avatar ID is missing in the query string.</p>');try{await loadAvatarDetails(t)}catch(t){console.error("Error loading avatar details:",t),document.getElementById("avatar-details-container").innerHTML=`<p class="text-red-500 text-center p-8">Failed to load avatar details: ${t.message}</p>`}}));