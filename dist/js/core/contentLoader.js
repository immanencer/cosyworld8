import{state,setLoading}from"./state.js";import{showToast}from"../utils/toast.js";export function initializeContentLoader(){window.loadContent=loadContent}export async function loadContent(){const t=document.getElementById("content");if(t){t.innerHTML='\n    <div class="p-8 flex justify-center items-center">\n      <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600"></div>\n    </div>\n  ',setLoading(!0);try{switch(state.activeTab){case"squad":await loadTabContent("squad");break;case"actions":await loadTabContent("actions");break;case"leaderboard":await loadTabContent("leaderboard");break;case"tribes":await loadTabContent("tribes");break;case"social":await loadTabContent("social");break;default:t.innerHTML=`\n          <div class="text-center py-12 text-red-500">\n            Unknown tab: ${state.activeTab}\n          </div>\n        `}}catch(a){console.error("Content load error:",a),t.innerHTML=`\n      <div class="text-center py-12 text-red-500">\n        <p>Failed to load content: ${a.message}</p>\n        <button class="mt-4 px-4 py-2 bg-primary-600 text-white rounded" onclick="loadContent()">\n          Retry\n        </button>\n      </div>\n    `,showToast(`Failed to load content: ${a.message}`,{type:"error"})}finally{setLoading(!1)}}}async function loadTabContent(t){try{const a=await import(`../tabs/${t}.js`);if("function"==typeof a.loadContent)await a.loadContent();else{if("function"!=typeof a[`load${capitalize(t)}`])throw new Error(`No content loader found for tab "${t}"`);await a[`load${capitalize(t)}`]()}}catch(a){throw console.error(`Error loading ${t} tab:`,a),a}}function capitalize(t){return t.charAt(0).toUpperCase()+t.slice(1)}